import React, { useState, useEffect } from 'react';
import {
  Box,
  Container,
  Typography,
  Paper,
  Fade,
  Breadcrumbs,
  Link,
  Alert,
  Snackbar,
  Fab,
  useTheme,
  useMediaQuery
} from '@mui/material';
import {
  Home as HomeIcon,
  Search as SearchIcon,
  Favorite as FavoriteIcon,
  KeyboardArrowUp as KeyboardArrowUpIcon
} from '@mui/icons-material';
import { useNavigate, useSearchParams } from 'react-router-dom';
import { useTranslation } from 'react-i18next';
import TireSearchBar from '../../components/tire-search/TireSearchBar/TireSearchBar';
import TireSearchResults from '../../components/tire-search/TireSearchResults/TireSearchResults';
import { SearchHistory, PopularSearches } from '../../components/tire-search';
import { useTireSearch, useTireFavorites } from '../../hooks/useTireSearch';
import { tireSearchCacheUtils } from '../../api/tireSearch.api';
import { useAppDispatch } from '../../store';
import type { TireSearchResult, TireSuggestion } from '../../types/tireSearch';

const TireSearchPage: React.FC = () => {
  const { t } = useTranslation(['tireSearch', 'common']);
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));
  const navigate = useNavigate();
  const dispatch = useAppDispatch();
  const [searchParams, setSearchParams] = useSearchParams();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const [showScrollTop, setShowScrollTop] = useState(false);
  const [notification, setNotification] = useState<{
    open: boolean;
    message: string;
    severity: 'success' | 'error' | 'info' | 'warning';
  }>({
    open: false,
    message: '',
    severity: 'info'
  });

  // –•—É–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
  const {
    searchState,
    search,
    setQuery,
    suggestions,
    isLoading,
    hasError,
    hasResults,
    availableDiameters,
    availableBrands,
    goToPage
  } = useTireSearch({
    debounceDelay: 300,
    autoSearch: false,
    saveHistory: true,
    enableSuggestions: true
  });

  const { favorites, toggleFavorite, isFavorite } = useTireFavorites();

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  useEffect(() => {
    const queryFromUrl = searchParams.get('q');
    const pageFromUrl = parseInt(searchParams.get('page') || '1');
    
    if (queryFromUrl && queryFromUrl !== searchState.query) {
      setQuery(queryFromUrl);
      search(queryFromUrl);
    }
    
    if (pageFromUrl > 1 && pageFromUrl !== searchState.page) {
      goToPage(pageFromUrl);
    }
  }, [searchParams]);

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ URL –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–∞
  useEffect(() => {
    const params = new URLSearchParams();
    
    if (searchState.query) {
      params.set('q', searchState.query);
    }
    
    if (searchState.page > 1) {
      params.set('page', searchState.page.toString());
    }
    
    const newUrl = params.toString() ? `?${params.toString()}` : '';
    const currentUrl = window.location.search;
    
    if (newUrl !== currentUrl) {
      setSearchParams(params, { replace: true });
    }
  }, [searchState.query, searchState.page, setSearchParams]);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–≤–µ—Ä—Ö"
  useEffect(() => {
    const handleScroll = () => {
      setShowScrollTop(window.scrollY > 300);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    tireSearchCacheUtils.prefetchPopularData(dispatch);
  }, [dispatch]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
  const handleSearch = async (query: string) => {
    if (!query.trim()) {
      setNotification({
        open: true,
        message: '–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å',
        severity: 'warning'
      });
      return;
    }

    try {
      await search(query.trim());
      
      if (searchState.results.length === 0) {
        setNotification({
          open: true,
          message: '–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞.',
          severity: 'info'
        });
      }
    } catch (error) {
      setNotification({
        open: true,
        message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
        severity: 'error'
      });
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
  const handleSuggestionSelect = (suggestion: TireSuggestion) => {
    setQuery(suggestion.text);
    handleSearch(suggestion.text);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
  const handleResultClick = (result: TireSearchResult) => {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    console.log('–ö–ª–∏–∫ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É:', result);
    
    // –ü—Ä–∏–º–µ—Ä: –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–∏—Å–∫—É —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö —Ç–æ—á–µ–∫ –¥–ª—è –¥–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    navigate(`/client/search?brand=${result.brand_name}&model=${result.model_name}`);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  const handleFavoriteToggle = (resultId: number) => {
    toggleFavorite(resultId);
    
    const result = searchState.results.find(r => r.id === resultId);
    if (result) {
      const message = isFavorite(resultId) 
        ? `${result.full_name} —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ`
        : `${result.full_name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ`;
      
      setNotification({
        open: true,
        message,
        severity: 'success'
      });
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const handlePageChange = (page: number) => {
    goToPage(page);
    
    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–∞—á–∞–ª—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    const resultsElement = document.getElementById('search-results-section');
    if (resultsElement) {
      resultsElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }
  };

  // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≤–µ—Ä—Ö
  const scrollToTop = () => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  };

  // –ó–∞–∫—Ä—ã—Ç–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const handleCloseNotification = () => {
    setNotification(prev => ({ ...prev, open: false }));
  };

  return (
    <Box sx={{ minHeight: '100vh', bgcolor: 'background.default' }}>
      <Container maxWidth="xl" sx={{ py: 3 }}>
        {/* –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ */}
        <Breadcrumbs sx={{ mb: 3 }}>
          <Link
            color="inherit"
            href="/client"
            sx={{ display: 'flex', alignItems: 'center', textDecoration: 'none' }}
          >
            <HomeIcon sx={{ mr: 0.5, fontSize: 20 }} />
            –ì–ª–∞–≤–Ω–∞—è
          </Link>
          <Typography color="text.primary" sx={{ display: 'flex', alignItems: 'center' }}>
            <SearchIcon sx={{ mr: 0.5, fontSize: 20 }} />
            {t('navigation.search')}
          </Typography>
        </Breadcrumbs>

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <Box sx={{ textAlign: 'center', mb: 4 }}>
          <Typography
            variant={isMobile ? 'h4' : 'h3'}
            component="h1"
            sx={{ fontWeight: 700, mb: 2, color: 'primary.main' }}
          >
{t('title')}
          </Typography>
          <Typography
            variant="h6"
            color="text.secondary"
            sx={{ mb: 3, maxWidth: 600, mx: 'auto' }}
          >
            {t('subtitle')}
          </Typography>
        </Box>

        {/* –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ */}
        <Paper
          elevation={3}
          sx={{
            p: { xs: 2, md: 3 },
            mb: 4,
            borderRadius: 3,
            background: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)'
          }}
        >
          <TireSearchBar
            value={searchState.query}
            onChange={setQuery}
            onSearch={handleSearch}
            loading={isLoading}
            suggestions={suggestions}
            onSuggestionSelect={handleSuggestionSelect}
            placeholder={t('searchPlaceholder')}
          />

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã */}
          {availableBrands.length > 0 && (
            <Box sx={{ mt: 2, display: 'flex', flexWrap: 'wrap', gap: 2, justifyContent: 'center' }}>
              <Typography variant="caption" color="text.secondary">
                üìä –í –±–∞–∑–µ: {availableBrands.length} –±—Ä–µ–Ω–¥–æ–≤
              </Typography>
              <Typography variant="caption" color="text.secondary">
                üîß –î–∏–∞–º–µ—Ç—Ä—ã: R{availableDiameters.join(', R')}
              </Typography>
              <Typography variant="caption" color="text.secondary">
                ‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ: {favorites.length}
              </Typography>
            </Box>
          )}
        </Paper>

        {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–æ–∏—Å–∫–∏ –∏ –∏—Å—Ç–æ—Ä–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–≥–¥–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ */}
        {!searchState.query && !isLoading && searchState.results.length === 0 && (
          <Box sx={{ mb: 4 }}>
            <PopularSearches 
              onSearchSelect={setQuery}
              maxItems={12}
              showTrends={true}
              compact={false}
              autoRefresh={true}
            />
            <SearchHistory 
              onSearchSelect={setQuery}
              maxItems={8}
              showFavorites={true}
              compact={false}
            />
          </Box>
        )}

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
        <Fade in timeout={500}>
          <Box id="search-results-section">
            <TireSearchResults
              results={searchState.results}
              loading={isLoading}
              error={hasError ? searchState.error : null}
              total={searchState.total}
              page={searchState.page}
              onPageChange={handlePageChange}
              onResultClick={handleResultClick}
              onFavoriteToggle={handleFavoriteToggle}
              favorites={favorites}
            />
          </Box>
        </Fade>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        {!isLoading && !hasResults && !hasError && searchState.query && (
          <Box sx={{ mt: 4 }}>
            <Alert severity="info" sx={{ borderRadius: 2 }}>
              <Typography variant="subtitle2" sx={{ fontWeight: 600, mb: 1 }}>
                –°–æ–≤–µ—Ç—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞:
              </Typography>
              <ul style={{ margin: 0, paddingLeft: 20 }}>
                <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞ (BMW –≤–º–µ—Å—Ç–æ –ë–ú–í)</li>
                <li>–î–æ–±–∞–≤—å—Ç–µ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è (3 Series, C-Class)</li>
                <li>–£–∫–∞–∂–∏—Ç–µ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</li>
                <li>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∏–Ω–æ–Ω–∏–º—ã (–¢–∏–≥—É–∞–Ω = Tiguan)</li>
              </ul>
            </Alert>
          </Box>
        )}
      </Container>

      {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞–≤–µ—Ä—Ö" */}
      <Fade in={showScrollTop}>
        <Fab
          color="primary"
          size="small"
          onClick={scrollToTop}
          sx={{
            position: 'fixed',
            bottom: 16,
            right: 16,
            zIndex: 1000
          }}
        >
          <KeyboardArrowUpIcon />
        </Fab>
      </Fade>

      {/* –ö–Ω–æ–ø–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è) */}
      {isMobile && favorites.length > 0 && (
        <Fab
          color="secondary"
          size="medium"
          onClick={() => navigate('/client/favorites')}
          sx={{
            position: 'fixed',
            bottom: 80,
            right: 16,
            zIndex: 1000
          }}
        >
          <FavoriteIcon />
        </Fab>
      )}

      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
      <Snackbar
        open={notification.open}
        autoHideDuration={6000}
        onClose={handleCloseNotification}
        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}
      >
        <Alert
          onClose={handleCloseNotification}
          severity={notification.severity}
          sx={{ width: '100%', borderRadius: 2 }}
        >
          {notification.message}
        </Alert>
      </Snackbar>
    </Box>
  );
};

export default TireSearchPage;