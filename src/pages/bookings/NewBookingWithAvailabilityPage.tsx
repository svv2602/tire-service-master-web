// –ú–Ω–æ–≥–æ—à–∞–≥–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏

import React, { useState, useEffect, useMemo } from 'react';
import { useTranslation } from 'react-i18next';
import { useNavigate, useLocation } from 'react-router-dom';
import { useSelector, useDispatch } from 'react-redux';
import { RootState } from '../../store';
import {
  Box,
  Container,
  Paper,
  Typography,
  Button,
  CircularProgress,
  Alert,
  useTheme,
  useMediaQuery,
} from '@mui/material';
import { 
  ArrowBack as ArrowBackIcon,
  ArrowForward as ArrowForwardIcon,
  CheckCircle as CheckCircleIcon,
} from '@mui/icons-material';

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ UI
import Stepper from '../../components/ui/Stepper';
import { SuccessDialog } from '../../components/ui/Dialog';
import ExistingUserDialog from '../../components/booking/ExistingUserDialog';
import { CreateAccountDialog } from '../../components/booking/CreateAccountDialog';
import BookingTypeChoiceDialog from '../../components/booking/BookingTypeChoiceDialog';
import CreateAccountAndBookingDialog from '../../components/booking/CreateAccountAndBookingDialog';
import { AddCarToProfileDialog } from '../../components/booking/AddCarToProfileDialog';

// –ò–º–ø–æ—Ä—Ç —à–∞–≥–æ–≤ —Ñ–æ—Ä–º—ã
import {
  CityServicePointStep,
  DateTimeStep,
  ClientInfoStep,
  CarTypeStep,
  ReviewStep,
  CategorySelectionStep,
} from './components';

// –ò–º–ø–æ—Ä—Ç API —Ö—É–∫–æ–≤
import { 
  useCreateClientBookingMutation,
  useGetBookingByIdQuery,
} from '../../api/bookings.api';
import { useGetCurrentUserQuery } from '../../api/auth.api';
import { useGetMyClientCarsQuery } from '../../api/clients.api';

// –ò–º–ø–æ—Ä—Ç —É—Ç–∏–ª–∏—Ç
import { shouldOfferToAddCar, prepareCarDataForDialog } from '../../utils/carUtils';

// –ò–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π
import { getCardStyles } from '../../styles/components';
import { getThemeColors, getButtonStyles } from '../../styles';

import ClientLayout from '../../components/client/ClientLayout';

// –ò–º–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤
import { BookingFormData } from '../../types/booking';

// ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
const initialFormData: BookingFormData = {
  service_category_id: 0,
  city_id: null,
  service_point_id: null,
  booking_date: '',
  start_time: '',
  service_recipient: {
    first_name: '',
    last_name: '',
    phone: '',
    email: '',
  },
  car_type_id: null,
  car_brand: '',
  car_model: '',
  license_plate: '',
  notes: '',
};

const NewBookingWithAvailabilityPage: React.FC = () => {
  const { t } = useTranslation();
  console.log('üöÄ NewBookingWithAvailabilityPage –∑–∞–≥—Ä—É–∂–µ–Ω');
  
  const navigate = useNavigate();
  const location = useLocation();
  
  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ
  console.log('üìç location.pathname:', location.pathname);
  console.log('üìç location.state:', location.state);
  console.log('üìç location.search:', location.search);
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));
  const colors = getThemeColors(theme);
  const secondaryButtonStyles = getButtonStyles(theme, 'secondary');
  
  // Redux —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  const isAuthenticated = useSelector((state: RootState) => state.auth.isAuthenticated);
  const currentUser = useSelector((state: RootState) => state.auth.user);
  const dispatch = useDispatch();
  
  // üöÄ –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–ª–æ—Ç–æ–≤
  const isServiceUser = currentUser && ['admin', 'partner', 'manager', 'operator'].includes(currentUser.role);
  
  console.log('üîç –¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
    isAuthenticated,
    userRole: currentUser?.role,
    isServiceUser,
    shouldShowAllSlots: isServiceUser
  });
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
  const [activeStep, setActiveStep] = useState(0);
  const [formData, setFormData] = useState<BookingFormData>(initialFormData);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitError, setSubmitError] = useState<string | null>(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —É—Å–ø–µ—Ö–∞
  const [successDialogOpen, setSuccessDialogOpen] = useState(false);
  const [createdBooking, setCreatedBooking] = useState<any>(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const [existingUserDialogOpen, setExistingUserDialogOpen] = useState(false);
  const [existingUserData, setExistingUserData] = useState<any>(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
  const [createAccountDialogOpen, setCreateAccountDialogOpen] = useState(false);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const [bookingTypeChoiceDialogOpen, setBookingTypeChoiceDialogOpen] = useState(false);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const [createAccountAndBookingDialogOpen, setCreateAccountAndBookingDialogOpen] = useState(false);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –ø—Ä–æ—Ñ–∏–ª—å
  const [addCarDialogOpen, setAddCarDialogOpen] = useState(false);
  const [carDataForDialog, setCarDataForDialog] = useState<any>({
    license_plate: '',
    car_brand: '',
    car_model: '',
    car_type_id: undefined,
  });
  
  // API —Ö—É–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { data: authUser, isLoading: isLoadingCurrentUser, error: currentUserError, refetch: refetchCurrentUser } = useGetCurrentUserQuery(
    undefined,
    {
      skip: !isAuthenticated, // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
      refetchOnMountOrArgChange: true, // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏
    }
  );

  // API —Ö—É–∫–∏ –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∫–ª–∏–µ–Ω—Ç–∞
  const { data: clientCars = [], refetch: refetchClientCars } = useGetMyClientCarsQuery(undefined, {
    skip: !isAuthenticated, // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  });

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è ID –∫–ª–∏–µ–Ω—Ç–∞
  const clientId = useMemo(() => {
    if (!authUser) return 0;
    
    try {
      // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ ID –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –æ—Ç–≤–µ—Ç–∞ API
      const authData = authUser as any; // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
      const clientFromUser = authData?.user?.client_id;
      const clientFromDirect = authData?.client?.id;
      const clientFromUserClient = authData?.user?.client?.id;
      
      const resultId = clientFromDirect || clientFromUser || clientFromUserClient || 0;
      console.log('üîç –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ clientId:', { clientFromUser, clientFromDirect, clientFromUserClient, resultId });
      
      return resultId;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ clientId:', error);
      return 0;
    }
  }, [authUser]);

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —à–∞–≥–æ–≤ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
  const STEPS = useMemo(() => [
    {
      id: 'category-selection',
      label: t('booking.steps.categorySelection'),
      component: CategorySelectionStep,
    },
    {
      id: 'city-service-point',
      label: t('booking.steps.cityServicePoint'),
      component: CityServicePointStep,
    },
    {
      id: 'date-time',
      label: t('booking.steps.dateTime'),
      component: DateTimeStep,
    },
    {
      id: 'client-info',
      label: t('booking.steps.clientInfo'),
      component: ClientInfoStep,
    },
    {
      id: 'car-type',
      label: t('booking.steps.carType'),
      component: CarTypeStep,
    },
    {
      id: 'review',
      label: t('booking.steps.review'),
      component: ReviewStep,
    },
  ], [t]);

  // ‚úÖ –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–±—Ä–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ)
  // –¢–µ–ø–µ—Ä—å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ —á–µ–∫–±–æ–∫—Å–∞ "–Ø –ø–æ–ª—É—á–∞—Ç–µ–ª—å —É—Å–ª—É–≥" –≤ ClientInfoStep
  useEffect(() => {
    const userData = authUser?.user;
    console.log('üîç –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', {
      isAuthenticated,
      authUser,
      hasFirstName: userData?.first_name,
      hasPhone: userData?.phone,
    });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –≤—ã–±–∏—Ä–∞–µ—Ç —á–µ—Ä–µ–∑ —á–µ–∫–±–æ–∫—Å
    console.log('‚ÑπÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å "–Ø –ø–æ–ª—É—á–∞—Ç–µ–ª—å —É—Å–ª—É–≥"');
  }, [isAuthenticated, authUser]);
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (isAuthenticated && refetchCurrentUser) {
      console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
      refetchCurrentUser();
    }
  }, []);
  
  // ‚úÖ –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ location.state (–≥–æ—Ä–æ–¥ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
  useEffect(() => {
    const stateData = location.state as any;
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ location.state:', stateData);
    
    if (stateData) {
      console.log('üìç –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ location.state:', stateData);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º formData —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ location.state
      setFormData(prev => {
        const updatedData = { ...prev };
        
        // –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
        if (stateData.cityId && stateData.cityName) {
          updatedData.city_id = stateData.cityId;
          console.log(`üèôÔ∏è –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω –≥–æ—Ä–æ–¥: ${stateData.cityName} (ID: ${stateData.cityId})`);
        }
        
        // –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–π —Ç–æ—á–∫–∏ (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–∞)
        if (stateData.servicePointId) {
          updatedData.service_point_id = stateData.servicePointId;
          console.log(`üè¢ –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Å–µ—Ä–≤–∏—Å–Ω–∞—è —Ç–æ—á–∫–∞: ID ${stateData.servicePointId}`);
        }
        
        // –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–∞)
        if (stateData.service_category_id) {
          updatedData.service_category_id = stateData.service_category_id;
          console.log(`üîß –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ID ${stateData.service_category_id}`);
        }
        
        console.log('üìã –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ formData –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updatedData);
        
        return updatedData;
      });
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —à–∞–≥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      if (stateData.startFromDateTimeStep && stateData.cityId && stateData.servicePointId && stateData.service_category_id) {
        // –ï—Å–ª–∏ —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —à–∞–≥ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
        setActiveStep(2);
        console.log('‚è≠Ô∏è –ü—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —à–∞–≥ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ (—à–∞–≥ 2) —á–µ—Ä–µ–∑ startFromDateTimeStep');
      } else if (stateData.step1Completed || (stateData.cityId && stateData.servicePointId && stateData.service_category_id)) {
        // –ï—Å–ª–∏ –≥–æ—Ä–æ–¥, —Å–µ—Ä–≤–∏—Å–Ω–∞—è —Ç–æ—á–∫–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ –≤—ã–±—Ä–∞–Ω—ã, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
        setActiveStep(2);
        console.log('‚è≠Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —à–∞–≥ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ (—à–∞–≥ 2)');
      } else if (stateData.cityId && stateData.servicePointId) {
        // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –≥–æ—Ä–æ–¥ –∏ —Å–µ—Ä–≤–∏—Å–Ω–∞—è —Ç–æ—á–∫–∞, –Ω–æ –Ω–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        setActiveStep(0);
        console.log('‚è≠Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —à–∞–≥ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (—à–∞–≥ 0)');
      } else if (stateData.cityId) {
        // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–æ–ª—å–∫–æ –≥–æ—Ä–æ–¥, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ç–æ—á–∫–∏
        setActiveStep(0);
        console.log('‚è≠Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —à–∞–≥ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (—à–∞–≥ 0)');
      }
    }
  }, []);
  
  // –ú—É—Ç–∞—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const [createClientBooking] = useCreateClientBookingMutation();
  
  // –§—É–Ω–∫—Ü–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —à–∞–≥–∞–º
  const handleNext = () => {
    if (activeStep < STEPS.length - 1) {
      setActiveStep(prev => prev + 1);
    }
  };
  
  const handleBack = () => {
    if (activeStep > 0) {
      setActiveStep(prev => prev - 1);
    }
  };
  
  const handleStepClick = (stepIndex: number) => {
    // –†–∞–∑—Ä–µ—à–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ —Ç–æ–ª—å–∫–æ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —à–∞–≥–∏ –∏–ª–∏ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
    if (stepIndex <= activeStep + 1 && stepIndex >= 0) {
      setActiveStep(stepIndex);
    }
  };
  
  // ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è –≥–æ—Å—Ç–µ–≤—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
  const isCurrentStepValid = useMemo((): boolean => {
    const step = STEPS[activeStep];
    
    if (!step) {
      return false;
    }
    
    switch (step.id) {
      case 'category-selection':
        return formData.service_category_id > 0;
      
      case 'city-service-point':
        return formData.city_id !== null && formData.service_point_id !== null;
      
      case 'date-time': {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –≤—ã–±—Ä–∞–Ω—ã
        const hasDate = Boolean(formData.booking_date && formData.booking_date.trim());
        const hasTime = Boolean(formData.start_time && formData.start_time.trim());
        const isValid = hasDate && hasTime;
        
        return isValid;
      }
      
      case 'client-info':
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—É—á–∞—Ç–µ–ª—è —É—Å–ª—É–≥–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –≤—Å–µ—Ö)
        if (!formData.service_recipient) {
          return false;
        }
        const recipientPhone = (formData.service_recipient.phone || '').replace(/[^\d]/g, '');
        const isRecipientPhoneValid = recipientPhone.length >= 10 && recipientPhone.length <= 15;
        const isRecipientEmailValid = !formData.service_recipient.email || Boolean(formData.service_recipient.email.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/));
        
        return (
          (formData.service_recipient.first_name || '').trim().length >= 2 &&
          (formData.service_recipient.last_name || '').trim().length >= 2 &&
          isRecipientPhoneValid &&
          isRecipientEmailValid
        );
      
      case 'car-type':
        return formData.car_type_id !== null && (formData.license_plate || '').trim().length > 0;
      
      case 'review':
        return true; // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–ø—Ü–∏–æ–Ω–∞–ª–µ–Ω
      
      default:
        return false;
    }
  }, [activeStep, formData]);
  
  // ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –¥–ª—è –Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const handleSubmit = async () => {
    // üî• –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê –ê–ö–¢–ò–í–ù–ê - –í–ï–†–°–ò–Ø 4.07.2025-17:00 üî•
    console.log('üî• –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê –ê–ö–¢–ò–í–ù–ê - –í–ï–†–°–ò–Ø 4.07.2025-17:00 üî•');
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    if (!isAuthenticated) {
      console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è');
      setBookingTypeChoiceDialogOpen(true);
      return;
    }

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —Å–æ–∑–¥–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é
    await createBookingForAuthenticatedUser();
  };

  // –°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const createBookingForAuthenticatedUser = async () => {
    try {
      setIsSubmitting(true);
      setSubmitError(null);

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –æ–∂–∏–¥–∞–µ–º–æ–º –±—ç–∫–µ–Ω–¥–æ–º
      const bookingData: any = {
        booking: {
          service_point_id: formData.service_point_id,
          service_category_id: formData.service_category_id,
          booking_date: formData.booking_date,
          start_time: formData.start_time,
          car_type_id: formData.car_type_id,
          car_brand: formData.car_brand,
          car_model: formData.car_model,
          license_plate: formData.license_plate,
          notes: formData.notes,
          // –ü–æ–ª—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è —É—Å–ª—É–≥–∏
          service_recipient_first_name: formData.service_recipient.first_name,
          service_recipient_last_name: formData.service_recipient.last_name,
          service_recipient_phone: formData.service_recipient.phone,
          service_recipient_email: formData.service_recipient.email,
        },
        services: [], // –£–±–∏—Ä–∞–µ–º –≤—ã–±–æ—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —É—Å–ª—É–≥ - –ø–µ—Ä–µ–¥–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
      };

      // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', JSON.stringify(bookingData, null, 2));

      const response = await createClientBooking(bookingData).unwrap();

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      setCreatedBooking(response);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤ –ø—Ä–æ—Ñ–∏–ª—å
      const carData = prepareCarDataForDialog(formData);
      console.log('üîç –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è:', carData);
      console.log('üîç –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∫–ª–∏–µ–Ω—Ç–∞:', clientCars);
      console.log('üîç –†–æ–ª—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser?.role);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è –¥–ª—è –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      if (shouldOfferToAddCar(carData, clientCars)) {
        console.log('üöó –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤ –ø—Ä–æ—Ñ–∏–ª—å:', carData);
        setCarDataForDialog(carData);
        setAddCarDialogOpen(true);
      } else {
        console.log('‚ÑπÔ∏è –ê–≤—Ç–æ–º–æ–±–∏–ª—å —É–∂–µ –µ—Å—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è');
        setSuccessDialogOpen(true);
      }

    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      setIsSubmitting(false);
      setSubmitError(
        error?.data?.message || 
        t('forms.bookings.form.messages.bookingCreateError')
      );
    }
  };

  // ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const createGuestBooking = async () => {
    try {
      console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –≥–æ—Å—Ç–µ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...');
      
      // ‚úÖ –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è –±—ç–∫–µ–Ω–¥–∞
      const bookingData = {
        booking: {
          service_point_id: formData.service_point_id,
          service_category_id: formData.service_category_id,
          booking_date: formData.booking_date,
          start_time: formData.start_time,
          car_type_id: formData.car_type_id,
          car_brand: formData.car_brand,
          car_model: formData.car_model,
          license_plate: formData.license_plate,
          notes: formData.notes,
          // –ü–æ–ª—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è —É—Å–ª—É–≥–∏
          service_recipient_first_name: formData.service_recipient.first_name,
          service_recipient_last_name: formData.service_recipient.last_name,
          service_recipient_phone: formData.service_recipient.phone,
          service_recipient_email: formData.service_recipient.email,
        },
        services: [], // –£–±–∏—Ä–∞–µ–º –≤—ã–±–æ—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —É—Å–ª—É–≥ - –ø–µ—Ä–µ–¥–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
      };

      console.log('üìã –î–∞–Ω–Ω—ã–µ –≥–æ—Å—Ç–µ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', bookingData);

      const result = await createClientBooking(bookingData).unwrap();
      console.log('‚úÖ –ì–æ—Å—Ç–µ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ:', result);

      setCreatedBooking(result);
      setIsSubmitting(false);
      
      // ‚úÖ –î–ª—è –≥–æ—Å—Ç–µ–≤—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —É—Å–ø–µ—Ö–∞
      // –ù–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤ –ø—Ä–æ—Ñ–∏–ª—å, —Ç–∞–∫ –∫–∞–∫ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞
      setSuccessDialogOpen(true);

    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–æ—Å—Ç–µ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      console.error('‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', JSON.stringify(error, null, 2));
      console.error('‚ùå –î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:', error?.data);
      console.error('‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏:', error?.data?.message);
      console.error('‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error?.data?.details);
      setIsSubmitting(false);
      setSubmitError(
        error?.data?.message || 
        error?.data?.error ||
        t('forms.bookings.form.messages.bookingCreateError')
      );
    }
  };

  // ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞ —É—Å–ø–µ—Ö–∞
  const handleSuccessDialogClose = () => {
    setSuccessDialogOpen(false);
  };

  // ‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
  const handleGoToProfile = () => {
    if (isAuthenticated) {
      navigate('/client/bookings');
    } else {
      // –î–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–æ–π—Ç–∏
      navigate('/auth/login', {
        state: {
          from: location.pathname,
          message: t('forms.bookings.form.messages.loginToViewBookings')
        }
      });
    }
  };

  const handleCreateAnother = () => {
    handleSuccessDialogClose();
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –Ω–æ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    setFormData(initialFormData);
    setActiveStep(0);
  };

  const handleGoHome = () => {
    handleSuccessDialogClose();
    navigate('/client');
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–∏–∞–ª–æ–≥–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≥–æ—Å—Ç–µ–≤—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π)
  const handleLoginSuccess = (userData: any) => {
    setExistingUserDialogOpen(false);
    setExistingUserData(null);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
    handleSubmit();
  };

  const handleContinueAsGuest = () => {
    setExistingUserDialogOpen(false);
    setExistingUserData(null);
    
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —à–∞–≥ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    setFormData(prev => ({
      ...prev,
      service_recipient: {
        first_name: '',
        last_name: '',
        phone: '',
        email: '',
      },
    }));
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —à–∞–≥ –≤–≤–æ–¥–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    setActiveStep(3);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–∏–∞–ª–æ–≥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
  const handleAccountCreated = (userData: any) => {
    console.log('‚úÖ –ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–æ:', userData);
    setCreateAccountDialogOpen(false);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞
    console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º window.location.href –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
    // –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ
    window.location.href = '/client/bookings?newAccount=true';
  };

  const handleContinueWithoutAccount = () => {
    console.log('‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–¥–æ–ª–∂–∏–ª –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞');
    setCreateAccountDialogOpen(false);
    
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    navigate('/client');
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–∏–∞–ª–æ–≥–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleCreateWithAccount = () => {
    console.log('üÜï –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Å–æ–∑–¥–∞–Ω–∏–µ —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º');
    setBookingTypeChoiceDialogOpen(false);
    setCreateAccountAndBookingDialogOpen(true);
  };

  const handleCreateWithoutAccount = () => {
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Å–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑ –∞–∫–∫–∞—É–Ω—Ç–∞');
    setBookingTypeChoiceDialogOpen(false);
    createGuestBooking();
  };

  const handleBookingTypeChoiceClose = () => {
    setBookingTypeChoiceDialogOpen(false);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–∏–∞–ª–æ–≥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleAccountAndBookingSuccess = (bookingId: number) => {
    console.log('‚úÖ –ê–∫–∫–∞—É–Ω—Ç –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω—ã, ID –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', bookingId);
    setCreateAccountAndBookingDialogOpen(false);
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–æ–≤–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ
    console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç...');
    navigate('/client/bookings?newAccount=true&bookingId=' + bookingId);
  };

  const handleAccountAndBookingClose = () => {
    setCreateAccountAndBookingDialogOpen(false);
  };

  const handleAccountAndBookingContinueAsGuest = () => {
    console.log('üë§ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å" –∏–∑ CreateAccountAndBookingDialog');
    setCreateAccountAndBookingDialogOpen(false);
    // –°–æ–∑–¥–∞–µ–º –≥–æ—Å—Ç–µ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    createGuestBooking();
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–∏–∞–ª–æ–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –ø—Ä–æ—Ñ–∏–ª—å
  const handleAddCarDialogClose = () => {
    setAddCarDialogOpen(false);
    setCarDataForDialog({
      license_plate: '',
      car_brand: '',
      car_model: '',
      car_type_id: undefined,
    });
    setSuccessDialogOpen(true);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –ø—Ä–æ—Ñ–∏–ª—å
  const handleCarAdded = (addedCar: any) => {
    console.log('üöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø—Ä–æ—Ñ–∏–ª—å:', addedCar);
    refetchClientCars(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
    setAddCarDialogOpen(false);
    setSuccessDialogOpen(true);
  };

  // –†–µ–Ω–¥–µ—Ä —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞
  const renderCurrentStep = () => {
    // –ë—ã—Å—Ç—Ä–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ - –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–µ —à–∞–≥–∏
    const CurrentStepComponent = STEPS[activeStep].component;
    
    // –î–ª—è —à–∞–≥–∞ CarTypeStep –ø–µ—Ä–µ–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–ø onStepChange
    // üöÄ –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –î–ª—è —à–∞–≥–∞ DateTimeStep –ø–µ—Ä–µ–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const additionalProps: any = STEPS[activeStep].id === 'car-type' 
      ? { onStepChange: setActiveStep }
      : {};
    
    if (STEPS[activeStep].id === 'date-time') {
      additionalProps.isServiceUser = isServiceUser;
    }
    
    return (
      <CurrentStepComponent
        formData={formData}
        setFormData={setFormData}
        onNext={handleNext}
        onBack={handleBack}
        isValid={isCurrentStepValid}
        {...additionalProps}
      />
    );
  };
  
  return (
    <ClientLayout>
      <Box sx={{ minHeight: '100vh', bgcolor: colors.backgroundPrimary }}>
        <Container maxWidth="lg" sx={{ py: 3 }}>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <Box sx={{ mb: 3, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
            <Typography variant="h4" component="h1" sx={{ fontWeight: 600 }}>
              {t('booking.title')} {!isAuthenticated && <Typography component="span" variant="body2" color="text.secondary">{t('booking.guestTitle').replace(t('booking.title'), '').trim()}</Typography>}
            </Typography>
            <Button
              startIcon={<ArrowBackIcon />}
              onClick={() => navigate('/client')}
              variant="outlined"
              size="small"
              color="error"
            >
              {t('booking.cancel')}
            </Button>
          </Box>
          
          {/* Stepper */}
          {activeStep !== -1 && (
            <Paper sx={{ ...getCardStyles(theme), mb: 3, p: 3 }}>
              <Stepper
                steps={STEPS.map(step => ({
                  label: step.label,
                  content: <div />
                }))}
                activeStep={activeStep}
                onStepChange={handleStepClick}
                orientation={isMobile ? 'vertical' : 'horizontal'}
              />
            </Paper>
          )}
          
          {/* –ö–æ–Ω—Ç–µ–Ω—Ç —à–∞–≥–∞ */}
          <Paper sx={{ ...getCardStyles(theme), p: 3 }}>
            {renderCurrentStep()}
            
            {/* –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
            {submitError && (
              <Alert severity="error" sx={{ mt: 2 }}>
                {submitError}
              </Alert>
            )}
            
            {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ - —Å–∫—Ä—ã–≤–∞–µ–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
            {activeStep !== -1 && (
              <Box sx={{ 
                display: 'flex', 
                justifyContent: 'space-between', 
                alignItems: 'center',
                mt: 4,
                flexDirection: isMobile ? 'column' : 'row',
                gap: 2
              }}>
                {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" */}
                <Button
                  onClick={handleBack}
                  disabled={activeStep === 0}
                  startIcon={<ArrowBackIcon />}
                  variant="outlined"
                  size="large"
                  sx={{ ...secondaryButtonStyles, minWidth: isMobile ? '100%' : 120 }}
                >
                  {t('booking.back')}
                </Button>
                
                {/* –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ" –∏–ª–∏ "–°–æ–∑–¥–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" */}
                {activeStep === STEPS.length - 1 ? (
                  <Button
                    onClick={handleSubmit}
                    disabled={!isCurrentStepValid || isSubmitting}
                    endIcon={isSubmitting ? <CircularProgress size={20} /> : <CheckCircleIcon />}
                    variant="contained"
                    size="large"
                    color="primary"
                    sx={{ minWidth: isMobile ? '100%' : 200 }}
                  >
                    {isSubmitting ? t('booking.creating') : t('booking.createBooking')}
                  </Button>
                ) : (
                  <Button
                    onClick={handleNext}
                    disabled={!isCurrentStepValid}
                    endIcon={<ArrowForwardIcon />}
                    variant="contained"
                    size="large"
                    color="primary"
                    sx={{ minWidth: isMobile ? '100%' : 120 }}
                  >
                    {t('booking.next')}
                  </Button>
                )}
              </Box>
            )}
          </Paper>
        </Container>
      </Box>
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
      <SuccessDialog
        open={successDialogOpen}
        onClose={handleSuccessDialogClose}
        title={t('bookingModals.success.title')}
        message={
          isAuthenticated 
            ? t('bookingModals.success.messageAuth')
            : t('bookingModals.success.messageGuest')
        }
        description={
          !isAuthenticated 
            ? t('bookingModals.success.guestDescription')
            : undefined
        }
        bookingDetails={createdBooking ? {
          id: createdBooking.id,
          date: createdBooking.booking_date,
          time: createdBooking.start_time,
          servicePoint: createdBooking.service_point?.name,
          servicePointAddress: createdBooking.service_point?.address,
          servicePointPhone: createdBooking.service_point?.phone,
          clientName: createdBooking.service_recipient?.full_name,
          carInfo: createdBooking.car_info?.license_plate ? 
            `${createdBooking.car_info.license_plate}${createdBooking.car_info.brand ? ` (${createdBooking.car_info.brand}${createdBooking.car_info.model ? ` ${createdBooking.car_info.model}` : ''})` : ''}` 
            : undefined,
        } : undefined}
        primaryButtonText={
          isAuthenticated 
            ? t('bookingModals.success.myBookings') 
            : t('bookingModals.success.goHome')
        }
        onPrimaryAction={
          isAuthenticated 
            ? handleGoToProfile 
            : handleGoHome
        }
        secondaryButtonText={isAuthenticated ? t('bookingModals.success.returnHome') : undefined}
        onSecondaryAction={isAuthenticated ? handleGoHome : undefined}
      />
      
      {/* –î–∏–∞–ª–æ–≥ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≥–æ—Å—Ç–µ–≤—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π) */}
      {existingUserData && (
        <ExistingUserDialog
          open={existingUserDialogOpen}
          onClose={() => setExistingUserDialogOpen(false)}
          user={existingUserData}
          onLoginSuccess={handleLoginSuccess}
          onContinueAsGuest={handleContinueAsGuest}
        />
      )}

      {/* –î–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –≥–æ—Å—Ç–µ–≤—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π */}
      <CreateAccountDialog
        open={createAccountDialogOpen}
        onClose={() => setCreateAccountDialogOpen(false)}
        bookingData={formData}
        createdBooking={createdBooking}
        onAccountCreated={handleAccountCreated}
        onContinueWithoutAccount={handleContinueWithoutAccount}
      />

      {/* –î–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
      <BookingTypeChoiceDialog
        open={bookingTypeChoiceDialogOpen}
        onClose={handleBookingTypeChoiceClose}
        onCreateWithAccount={handleCreateWithAccount}
        onCreateWithoutAccount={handleCreateWithoutAccount}
      />

      {/* –î–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ */}
      <CreateAccountAndBookingDialog
        open={createAccountAndBookingDialogOpen}
        onClose={handleAccountAndBookingClose}
        bookingData={formData}
        onSuccess={handleAccountAndBookingSuccess}
        onContinueAsGuest={handleAccountAndBookingContinueAsGuest}
      />

      {/* –î–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –ø—Ä–æ—Ñ–∏–ª—å */}
      <AddCarToProfileDialog
        open={addCarDialogOpen}
        onClose={handleAddCarDialogClose}
        carData={carDataForDialog}
        onCarAdded={handleCarAdded}
      />
    </ClientLayout>
  );
};

export default NewBookingWithAvailabilityPage;
