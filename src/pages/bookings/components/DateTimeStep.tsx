// –®–∞–≥ 2: –í—ã–±–æ—Ä –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏

import React, { useState, useEffect, useMemo } from 'react';
import {
  Box,
  Typography,
  Alert,
  Paper,
  FormHelperText,
} from '@mui/material';
import { useTheme } from '@mui/material/styles';
import { format, parseISO, isToday, addDays } from 'date-fns';
import { ru } from 'date-fns/locale';
import {
  LocationOn as LocationIcon,
  Phone as PhoneIcon,
  Warning as WarningIcon,
} from '@mui/icons-material';

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
import { AvailabilitySelector } from '../../../components/availability';

// –ò–º–ø–æ—Ä—Ç API —Ö—É–∫–æ–≤
import { useGetAvailableTimesQuery } from '../../../api/availability.api';
import { useGetServicePointBasicInfoQuery } from '../../../api/servicePoints.api';

// –ò–º–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤
import { BookingFormData } from '../NewBookingWithAvailabilityPage';

// –ò–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π
import { getCardStyles } from '../../../styles/components';

interface DateTimeStepProps {
  formData: BookingFormData;
  setFormData: React.Dispatch<React.SetStateAction<BookingFormData>>;
  onNext: () => void;
  onBack: () => void;
  isValid: boolean;
}

const DateTimeStep: React.FC<DateTimeStepProps> = ({
  formData,
  setFormData,
  isValid,
}) => {
  const theme = useTheme();
  const [selectedDate, setSelectedDate] = useState<Date | null>(null);
  const [selectedTimeSlot, setSelectedTimeSlot] = useState<string | null>(null);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ formData
  useEffect(() => {
    if (formData.booking_date) {
      try {
        const date = parseISO(formData.booking_date);
        setSelectedDate(date);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã:', error);
      }
    } else {
      // –ï—Å–ª–∏ –¥–∞—Ç–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤—Ç—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      const tomorrow = addDays(new Date(), 1);
      setSelectedDate(tomorrow);
      setFormData(prev => ({
        ...prev,
        booking_date: format(tomorrow, 'yyyy-MM-dd'),
      }));
    }
    
    if (formData.start_time) {
      setSelectedTimeSlot(formData.start_time);
    }
  }, [formData.booking_date, formData.start_time, setFormData]);
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
  const { data: availabilityData, isLoading: isLoadingAvailability, error: availabilityError } = useGetAvailableTimesQuery(
    {
      servicePointId: formData.service_point_id?.toString() || '0',
      params: { date: selectedDate ? format(selectedDate, 'yyyy-MM-dd') : '' }
    },
    { skip: !formData.service_point_id || !selectedDate }
  );
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã
  const availableTimeSlots = useMemo(() => {
    return (availabilityData?.available_times || [])
      .filter(slot => slot.can_book);
  }, [availabilityData]);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞—Ç—ã
  const handleDateChange = (date: Date | null) => {
    setSelectedDate(date);
    setSelectedTimeSlot(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞—Ç—ã
    
    setFormData(prev => ({
      ...prev,
      booking_date: date ? format(date, 'yyyy-MM-dd') : '',
      start_time: '',
    }));
  };
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ—á–∫–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
  const { data: servicePointData, isLoading: isLoadingServicePoint } = useGetServicePointBasicInfoQuery(
    formData.service_point_id?.toString() || '0',
    { skip: !formData.service_point_id }
  );
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
  const handleTimeSlotChange = (timeSlot: string | null) => {
    setSelectedTimeSlot(timeSlot);
    
    setFormData(prev => ({
      ...prev,
      start_time: timeSlot || '',
    }));
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–º –¥–Ω–µ–º
  const isSelectedDateToday = selectedDate ? isToday(selectedDate) : false;
  
  if (!formData.service_point_id) {
    return (
      <Box>
        <Typography variant="h5" component="h2" sx={{ mb: 3, fontWeight: 600 }}>
          –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        </Typography>
        <Alert severity="warning">
          –°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ—á–∫—É –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ.
        </Alert>
      </Box>
    );
  }
  
  return (
    <Box>
      <Typography variant="h5" component="h2" sx={{ mb: 3, fontWeight: 600 }}>
        –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
      </Typography>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–æ—á–∫–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è */}
      <Paper sx={{ ...getCardStyles(theme), p: 2, mb: 3, bgcolor: 'primary.50' }}>
        <Box sx={{ display: 'flex', alignItems: 'flex-start', gap: 1, mb: 1 }}>
          <LocationIcon sx={{ color: 'primary.main', mt: 0.5 }} />
          <Box>
            <Typography variant="subtitle1" sx={{ fontWeight: 600 }}>
              {isLoadingServicePoint ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : (servicePointData?.name || `–¢–æ—á–∫–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è #${formData.service_point_id}`)}
            </Typography>
            {servicePointData && (
              <Typography variant="body2" color="text.secondary" sx={{ mt: 0.5 }}>
                {servicePointData.city?.name && `–≥. ${servicePointData.city.name}`}
                {servicePointData.address && `, ${servicePointData.address}`}
              </Typography>
            )}
          </Box>
        </Box>
        <Typography variant="body2" color="text.secondary">
          –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–ª—è –≤–∞—à–µ–≥–æ –≤–∏–∑–∏—Ç–∞
        </Typography>
      </Paper>
      
      {/* –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ */}
      {availabilityError && (
        <Alert severity="error" sx={{ mb: 3 }}>
          –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
        </Alert>
      )}
      
      {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è */}
      {isSelectedDateToday && (
        <Alert 
          severity="warning" 
          sx={{ mb: 3 }}
          icon={<WarningIcon />}
        >
          <Box>
            <Typography variant="body1" sx={{ fontWeight: 500, mb: 1 }}>
              –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
            </Typography>
            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
              <PhoneIcon sx={{ fontSize: 20 }} />
              <Typography variant="body2">
                {servicePointData?.contact_phone || servicePointData?.phone || '+7 (XXX) XXX-XX-XX'}
              </Typography>
            </Box>
          </Box>
        </Alert>
      )}

      {/* –°–µ–ª–µ–∫—Ç–æ—Ä –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ */}
      <Box sx={{ mb: 3 }}>
        <AvailabilitySelector
          servicePointId={formData.service_point_id}
          selectedDate={selectedDate}
          onDateChange={handleDateChange}
          selectedTimeSlot={selectedTimeSlot}
          onTimeSlotChange={handleTimeSlotChange}
          availableTimeSlots={availableTimeSlots}
          isLoading={isLoadingAvailability}
          servicePointPhone={servicePointData?.contact_phone || servicePointData?.phone}
        />
      </Box>


      
      {/* –í–∞–ª–∏–¥–∞—Ü–∏—è */}
      {selectedDate && !selectedTimeSlot && (
        <FormHelperText error>
          –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        </FormHelperText>
      )}
      
      {!selectedDate && (
        <FormHelperText error>
          –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        </FormHelperText>
      )}
      
      {/* –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ */}
      {isValid && (
        <Alert severity="success" sx={{ mt: 3 }}>
          ‚úÖ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –≤—ã–±—Ä–∞–Ω—ã: {selectedDate && format(selectedDate, 'dd MMMM yyyy', { locale: ru })} –≤ {selectedTimeSlot}
        </Alert>
      )}
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ */}
      {isValid && (
        <Paper sx={{ ...getCardStyles(theme), p: 2, mt: 2, bgcolor: 'info.50' }}>
          <Typography variant="body2" color="info.main">
            üí° –ù–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          </Typography>
        </Paper>
      )}
    </Box>
  );
};

export default DateTimeStep;
