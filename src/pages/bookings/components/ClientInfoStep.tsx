// –®–∞–≥ 3: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ

import React, { useState, useEffect } from 'react';
import {
  Box,
  Typography,
  Grid,
  InputAdornment,
  FormControlLabel,
  Checkbox,
  Alert,
} from '@mui/material';
import {
  Person as PersonIcon,
  Phone as PhoneIcon,
  Email as EmailIcon,
  ContactPage as ContactPageIcon,
} from '@mui/icons-material';
import { useSelector } from 'react-redux';
import { RootState } from '../../../store';

// –ò–º–ø–æ—Ä—Ç UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import { TextField } from '../../../components/ui/TextField';

// –ò–º–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤
import { BookingFormData } from '../NewBookingWithAvailabilityPage';

interface ClientInfoStepProps {
  formData: BookingFormData;
  setFormData: React.Dispatch<React.SetStateAction<BookingFormData>>;
  onNext: () => void;
  onBack: () => void;
  isValid: boolean;
}

const ClientInfoStep: React.FC<ClientInfoStepProps> = ({
  formData,
  setFormData,
  isValid,
}) => {
  const { isAuthenticated, user } = useSelector((state: RootState) => state.auth);
  
  const [errors, setErrors] = useState({
    client_name: '',
    client_phone: '',
    client_email: '',
  });
  
  const [receiveNotifications, setReceiveNotifications] = useState(true);
  
  // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–µ–π
  const validateField = (field: string, value: string) => {
    switch (field) {
      case 'client_name':
        if (!value.trim()) {
          return '–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
        }
        if (value.trim().length < 2) {
          return '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞';
        }
        return '';
        
      case 'client_phone':
        if (!value.trim()) {
          return '–¢–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
        }
        // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        const phoneRegex = /^[+]?[0-9\s\-()]{10,}$/;
        if (!phoneRegex.test(value.replace(/\s/g, ''))) {
          return '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞';
        }
        return '';
        
      case 'client_email':
        if (value.trim() && !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value)) {
          return '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å';
        }
        return '';
        
      default:
        return '';
    }
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—è
  const handleFieldChange = (field: keyof typeof formData) => (event: React.ChangeEvent<HTMLInputElement>) => {
    const value = event.target.value;
    setFormData(prev => ({
      ...prev,
      [field]: value,
    }));
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª—è
    const error = validateField(field, value);
    setErrors(prev => ({
      ...prev,
      [field]: error,
    }));
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–µ–∫–±–æ–∫—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const handleNotificationsChange = (checked: boolean) => {
    setReceiveNotifications(checked);
    // –ú–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —ç—Ç–æ –≤ formData –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  };
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ formData
  useEffect(() => {
    const newErrors = {
      client_name: validateField('client_name', formData.client_name),
      client_phone: validateField('client_phone', formData.client_phone),
      client_email: validateField('client_email', formData.client_email),
    };
    setErrors(newErrors);
  }, [formData.client_name, formData.client_phone, formData.client_email]);
  
  return (
    <Box>
      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>
        <ContactPageIcon sx={{ mr: 2, fontSize: 32, color: 'primary.main' }} />
        <Box>
          <Typography variant="h5" component="h2" sx={{ fontWeight: 600, mb: 0.5 }}>
            –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
          </Typography>
          <Typography variant="body2" color="text.secondary">
            –®–∞–≥ 3 –∏–∑ 4: –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–≤—è–∑–∏
          </Typography>
        </Box>
      </Box>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      {isAuthenticated && user && (
        <Alert severity="info" sx={{ mb: 3 }}>
          üë§ –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ {user.first_name} {user.last_name}. 
          –î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Ö –∏–∑–º–µ–Ω–∏—Ç—å.
        </Alert>
      )}
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –Ω–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      {!isAuthenticated && (
        <Alert severity="info" sx={{ mb: 3 }}>
          üí° –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. 
          –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–≤—è–∑–∏ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
        </Alert>
      )}
      
      <Grid container spacing={3}>
        {/* –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è */}
        <Grid item xs={12}>
          <TextField
            label="–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è *"
            value={formData.client_name}
            onChange={handleFieldChange('client_name')}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
            required
            error={!!errors.client_name}
            helperText={errors.client_name || '–í–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏'}
            InputProps={{
              startAdornment: (
                <InputAdornment position="start">
                  <PersonIcon color="action" />
                </InputAdornment>
              ),
            }}
            fullWidth
          />
        </Grid>
        
        {/* –¢–µ–ª–µ—Ñ–æ–Ω */}
        <Grid item xs={12} sm={6}>
          <TextField
            label="–¢–µ–ª–µ—Ñ–æ–Ω *"
            value={formData.client_phone}
            onChange={handleFieldChange('client_phone')}
            placeholder="+380 67 123 45 67"
            required
            error={!!errors.client_phone}
            helperText={errors.client_phone || '–î–ª—è —Å–≤—è–∑–∏ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏'}
            InputProps={{
              startAdornment: (
                <InputAdornment position="start">
                  <PhoneIcon color="action" />
                </InputAdornment>
              ),
            }}
            fullWidth
          />
        </Grid>
        
        {/* Email */}
        <Grid item xs={12} sm={6}>
          <TextField
            label="Email"
            value={formData.client_email}
            onChange={handleFieldChange('client_email')}
            placeholder="your.email@example.com"
            type="email"
            error={!!errors.client_email}
            helperText={errors.client_email || '–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ. –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è'}
            InputProps={{
              startAdornment: (
                <InputAdornment position="start">
                  <EmailIcon color="action" />
                </InputAdornment>
              ),
            }}
            fullWidth
          />
        </Grid>
      </Grid>
      
      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
      <Alert severity="info" sx={{ mt: 3 }}>
        üìß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        <FormControlLabel
          control={
            <Checkbox
              checked={receiveNotifications}
              onChange={(e) => handleNotificationsChange(e.target.checked)}
              color="primary"
            />
          }
          label="–ü–æ–ª—É—á–∞—Ç—å SMS –∏ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–ø–∏—Å–∏"
          sx={{ mt: 1, display: 'block' }}
        />
      </Alert>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ */}
      <Alert severity="info" sx={{ mt: 3 }}>
        üîí –í–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è 
        –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤{' '}
        <Typography component="span" color="primary" sx={{ cursor: 'pointer', textDecoration: 'underline' }}>
          –ø–æ–ª–∏—Ç–∏–∫–µ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
        </Typography>
      </Alert>
      
      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—è—Ö */}
      {(!isValid) && (
        <Alert severity="warning" sx={{ mt: 3 }}>
          <Typography variant="body2" sx={{ fontWeight: 'bold', mb: 1 }}>
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:
          </Typography>
          <Box component="ul" sx={{ pl: 2, mb: 0, mt: 1 }}>
            {!formData.client_name && (
              <Typography variant="body2" component="li">
                –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è
              </Typography>
            )}
            {!formData.client_phone && (
              <Typography variant="body2" component="li">
                –¢–µ–ª–µ—Ñ–æ–Ω
              </Typography>
            )}
          </Box>
        </Alert>
      )}
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
      {isValid && (
        <Alert severity="info" sx={{ mt: 3 }}>
          –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã. –ú–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.
        </Alert>
      )}
    </Box>
  );
};

export default ClientInfoStep;
