import React, { useState } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import {
  Box,
  Container,
  Typography,
  Button,
  TextField,
  Paper,
  Grid,
  Card,
  CardContent,
  CardActions,
  IconButton,
  Chip,
  Avatar,
  Rating,
  InputAdornment,
  Autocomplete,
  Fade,
  useTheme,
  AppBar,
  Toolbar,
  Badge
} from '@mui/material';
import {
  Search as SearchIcon,
  LocationOn as LocationIcon,
  Build as BuildIcon,
  Speed as SpeedIcon,
  Schedule as ScheduleIcon,
  Star as StarIcon,
  Phone as PhoneIcon,
  Email as EmailIcon,
  TireRepair as TireIcon,
  DirectionsCar as CarIcon,
  Assessment as AssessmentIcon,
  Article as ArticleIcon,
  BookOnline as BookIcon,
  Map as MapIcon,
  Person as PersonIcon,
  Login as LoginIcon,
  Menu as MenuIcon
} from '@mui/icons-material';

// –ò–º–ø–æ—Ä—Ç —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å—Ç–∏–ª–µ–π
import { 
  getCardStyles, 
  getButtonStyles, 
  getTextFieldStyles,
  SIZES,
  getThemeColors,
  ANIMATIONS
} from '../../styles';

const ClientMainPage: React.FC = () => {
  const navigate = useNavigate();
  const theme = useTheme();
  const colors = getThemeColors(theme);
  
  const cardStyles = getCardStyles(theme, 'primary');
  const buttonStyles = getButtonStyles(theme, 'primary');
  const secondaryButtonStyles = getButtonStyles(theme, 'secondary');
  const textFieldStyles = getTextFieldStyles(theme, 'filled');
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedCity, setSelectedCity] = useState<string | null>('–ú–æ—Å–∫–≤–∞');
  
  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–æ–≤
  const cities = [
    '–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', 
    '–ö–∞–∑–∞–Ω—å', '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥', '–ß–µ–ª—è–±–∏–Ω—Å–∫', '–°–∞–º–∞—Ä–∞'
  ];
  
  // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏
  const popularServices = [
    {
      id: 1,
      title: '–ó–∞–º–µ–Ω–∞ —à–∏–Ω',
      price: '–æ—Ç 500 ‚ÇΩ',
      duration: '30 –º–∏–Ω',
      icon: <TireIcon />,
      description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∑–∞–º–µ–Ω–∞ –ª–µ—Ç–Ω–∏—Ö –∏ –∑–∏–º–Ω–∏—Ö —à–∏–Ω'
    },
    {
      id: 2,
      title: '–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –∫–æ–ª–µ—Å',
      price: '–æ—Ç 200 ‚ÇΩ',
      duration: '15 –º–∏–Ω',
      icon: <SpeedIcon />,
      description: '–£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –≤–∏–±—Ä–∞—Ü–∏–∏ –∏ –Ω–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–≥–æ –∏–∑–Ω–æ—Å–∞'
    },
    {
      id: 3,
      title: '–†–µ–º–æ–Ω—Ç –ø—Ä–æ–∫–æ–ª–æ–≤',
      price: '–æ—Ç 300 ‚ÇΩ',
      duration: '20 –º–∏–Ω',
      icon: <BuildIcon />,
      description: '–ë—ã—Å—Ç—Ä—ã–π –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–µ–º–æ–Ω—Ç –ø—Ä–æ–∫–æ–ª–æ–≤'
    },
    {
      id: 4,
      title: '–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂',
      price: '–æ—Ç 400 ‚ÇΩ',
      duration: '25 –º–∏–Ω',
      icon: <CarIcon />,
      description: '–°–Ω—è—Ç–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —à–∏–Ω –Ω–∞ –¥–∏—Å–∫–∏'
    }
  ];
  
  // –ë–ª–∏–∂–∞–π—à–∏–µ —Å–µ—Ä–≤–∏—Å—ã (—Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)
  const nearbyServices = [
    {
      id: 1,
      name: '–®–∏–Ω–ú–∞—Å—Ç–µ—Ä –¶–µ–Ω—Ç—Ä',
      address: '—É–ª. –õ–µ–Ω–∏–Ω–∞, 15',
      rating: 4.8,
      reviews: 156,
      distance: '0.8 –∫–º',
      workingHours: '08:00 - 20:00',
      phone: '+7 (495) 123-45-67',
      services: ['–ó–∞–º–µ–Ω–∞ —à–∏–Ω', '–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞', '–†–µ–º–æ–Ω—Ç']
    },
    {
      id: 2,
      name: '–ë—ã—Å—Ç—Ä—ã–π –®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂',
      address: '–ø—Ä. –ú–∏—Ä–∞, 42',
      rating: 4.6,
      reviews: 98,
      distance: '1.2 –∫–º',
      workingHours: '09:00 - 19:00',
      phone: '+7 (495) 987-65-43',
      services: ['–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂', '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞', '–•—Ä–∞–Ω–µ–Ω–∏–µ']
    },
    {
      id: 3,
      name: '–ü—Ä–æ—Ñ–∏–®–∏–Ω–∞',
      address: '—É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è, 8',
      rating: 4.9,
      reviews: 203,
      distance: '1.5 –∫–º',
      workingHours: '07:00 - 21:00',
      phone: '+7 (495) 456-78-90',
      services: ['–ó–∞–º–µ–Ω–∞ —à–∏–Ω', '–†–µ–º–æ–Ω—Ç', '–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞']
    }
  ];
  
  // –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
  const recentArticles = [
    {
      id: 1,
      title: '–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∑–∏–º–Ω–∏–µ —à–∏–Ω—ã',
      excerpt: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –≤—ã–±–æ—Ä—É –∑–∏–º–Ω–∏—Ö —à–∏–Ω –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –µ–∑–¥—ã',
      image: '/images/winter-tires.jpg',
      readTime: '5 –º–∏–Ω',
      author: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ —à–∏–Ω–∞–º'
    },
    {
      id: 2,
      title: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –≤ —à–∏–Ω–∞—Ö',
      excerpt: '–í–ª–∏—è–Ω–∏–µ –¥–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞',
      image: '/images/tire-pressure.jpg',
      readTime: '3 –º–∏–Ω',
      author: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç'
    },
    {
      id: 3,
      title: '–°–µ–∑–æ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —à–∏–Ω',
      excerpt: '–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å —à–∏–Ω—ã –≤ –º–µ–∂—Å–µ–∑–æ–Ω—å–µ',
      image: '/images/tire-storage.jpg',
      readTime: '4 –º–∏–Ω',
      author: '–ú–∞—Å—Ç–µ—Ä —Å–µ—Ä–≤–∏—Å–∞'
    }
  ];

  const handleSearch = () => {
    navigate(`/client/search?city=${selectedCity}&query=${searchQuery}`);
  };

  return (
    <Box sx={{ minHeight: '100vh', bgcolor: colors.backgroundPrimary }}>
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <AppBar position="static" sx={{ bgcolor: colors.backgroundCard, boxShadow: 1 }}>
        <Toolbar>
          <Typography variant="h6" sx={{ flexGrow: 1, color: colors.textPrimary, fontWeight: 700 }}>
            üöó –¢–≤–æ—è –®–∏–Ω–∞
          </Typography>
          
          <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>
            <Button 
              color="inherit" 
              component={Link} 
              to="/knowledge-base"
              sx={{ color: colors.textSecondary }}
            >
              –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
            </Button>
            <Button 
              color="inherit" 
              component={Link} 
              to="/client/services"
              sx={{ color: colors.textSecondary }}
            >
              –£—Å–ª—É–≥–∏
            </Button>
            <Button 
              variant="outlined" 
              component={Link} 
              to="/login"
              startIcon={<LoginIcon />}
              sx={secondaryButtonStyles}
            >
              –í–æ–π—Ç–∏
            </Button>
          </Box>
        </Toolbar>
      </AppBar>

      {/* Hero —Å–µ–∫—Ü–∏—è */}
      <Fade in timeout={500}>
        <Box sx={{
          background: `linear-gradient(135deg, ${theme.palette.primary.main} 0%, ${theme.palette.primary.dark} 100%)`,
          color: 'white',
          py: 8,
          position: 'relative',
          overflow: 'hidden',
          '&::before': {
            content: '""',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            background: 'radial-gradient(circle at 30% 70%, rgba(255,255,255,0.1) 0%, transparent 50%)',
            pointerEvents: 'none'
          }
        }}>
          <Container maxWidth="lg">
            <Grid container spacing={4} alignItems="center">
              <Grid item xs={12} md={6}>
                <Typography variant="h2" sx={{ fontWeight: 700, mb: 2, fontSize: { xs: '2.5rem', md: '3.5rem' } }}>
                  –ù–∞–π–¥–∏—Ç–µ –ª—É—á—à–∏–π —à–∏–Ω–æ–º–æ–Ω—Ç–∞–∂ —Ä—è–¥–æ–º —Å –≤–∞–º–∏
                </Typography>
                <Typography variant="h6" sx={{ mb: 4, opacity: 0.9, lineHeight: 1.6 }}>
                  –ë—ã—Å—Ç—Ä–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞, –≥–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞
                </Typography>
                
                {/* –ü–æ–∏—Å–∫ */}
                <Paper sx={{ p: 2, borderRadius: SIZES.borderRadius.lg }}>
                  <Grid container spacing={2} alignItems="center">
                    <Grid item xs={12} sm={4}>
                      <Autocomplete
                        value={selectedCity}
                        onChange={(event, newValue) => setSelectedCity(newValue)}
                        options={cities}
                        renderInput={(params) => (
                          <TextField
                            {...params}
                            label="–ì–æ—Ä–æ–¥"
                            fullWidth
                            InputProps={{
                              ...params.InputProps,
                              startAdornment: <LocationIcon sx={{ mr: 1, color: colors.textSecondary }} />
                            }}
                          />
                        )}
                      />
                    </Grid>
                    <Grid item xs={12} sm={6}>
                      <TextField
                        fullWidth
                        label="–ù–∞–π—Ç–∏ —Å–µ—Ä–≤–∏—Å –∏–ª–∏ —É—Å–ª—É–≥—É"
                        value={searchQuery}
                        onChange={(e) => setSearchQuery(e.target.value)}
                        onKeyPress={(e) => e.key === 'Enter' && handleSearch()}
                        InputProps={{
                          endAdornment: (
                            <InputAdornment position="end">
                              <SearchIcon />
                            </InputAdornment>
                          )
                        }}
                      />
                    </Grid>
                    <Grid item xs={12} sm={2}>
                      <Button
                        fullWidth
                        variant="contained"
                        size="large"
                        onClick={handleSearch}
                        sx={{ 
                          ...buttonStyles, 
                          height: 56,
                          bgcolor: theme.palette.primary.main,
                          '&:hover': { bgcolor: theme.palette.primary.dark }
                        }}
                      >
                        –ù–∞–π—Ç–∏
                      </Button>
                    </Grid>
                  </Grid>
                </Paper>
              </Grid>
              
              <Grid item xs={12} md={6}>
                <Box sx={{ 
                  display: 'flex', 
                  justifyContent: 'center',
                  '& > *': { fontSize: { xs: '8rem', md: '12rem' } }
                }}>
                  üöó
                </Box>
              </Grid>
            </Grid>
          </Container>
        </Box>
      </Fade>

      {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏ */}
      <Fade in timeout={700}>
        <Container maxWidth="lg" sx={{ py: 8 }}>
          <Typography variant="h3" sx={{ 
            textAlign: 'center', 
            mb: 6, 
            fontWeight: 700,
            color: colors.textPrimary 
          }}>
            üîß –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏
          </Typography>
          
          <Grid container spacing={3}>
            {popularServices.map((service, index) => (
              <Grid item xs={12} sm={6} md={3} key={service.id}>
                <Fade in timeout={800 + index * 100}>
                  <Card sx={{ 
                    ...cardStyles, 
                    height: '100%',
                    cursor: 'pointer',
                    transition: ANIMATIONS.transition.medium,
                    '&:hover': {
                      transform: 'translateY(-4px)',
                      boxShadow: theme.shadows[4]
                    }
                  }}>
                    <CardContent sx={{ textAlign: 'center', p: 3 }}>
                      <Box sx={{ 
                        color: theme.palette.primary.main, 
                        fontSize: 48, 
                        mb: 2,
                        display: 'flex',
                        justifyContent: 'center'
                      }}>
                        {service.icon}
                      </Box>
                      <Typography variant="h6" sx={{ fontWeight: 600, mb: 1, color: colors.textPrimary }}>
                        {service.title}
                      </Typography>
                      <Typography variant="body2" sx={{ color: colors.textSecondary, mb: 2 }}>
                        {service.description}
                      </Typography>
                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                        <Typography variant="h6" sx={{ fontWeight: 700, color: theme.palette.primary.main }}>
                          {service.price}
                        </Typography>
                        <Chip 
                          icon={<ScheduleIcon />} 
                          label={service.duration} 
                          size="small"
                          variant="outlined"
                        />
                      </Box>
                    </CardContent>
                    <CardActions sx={{ justifyContent: 'center', pb: 3 }}>
                      <Button 
                        variant="contained" 
                        sx={buttonStyles}
                        onClick={() => navigate('/client/booking', { state: { service } })}
                      >
                        –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
                      </Button>
                    </CardActions>
                  </Card>
                </Fade>
              </Grid>
            ))}
          </Grid>
        </Container>
      </Fade>

      {/* –ë–ª–∏–∂–∞–π—à–∏–µ —Å–µ—Ä–≤–∏—Å—ã */}
      <Box sx={{ bgcolor: colors.backgroundSecondary, py: 8 }}>
        <Container maxWidth="lg">
          <Fade in timeout={900}>
            <Box>
              <Typography variant="h3" sx={{ 
                textAlign: 'center', 
                mb: 6, 
                fontWeight: 700,
                color: colors.textPrimary 
              }}>
                üìç –ë–ª–∏–∂–∞–π—à–∏–µ —Å–µ—Ä–≤–∏—Å—ã
              </Typography>
              
              <Grid container spacing={3}>
                {nearbyServices.map((service, index) => (
                  <Grid item xs={12} md={4} key={service.id}>
                    <Fade in timeout={1000 + index * 100}>
                      <Card sx={{ 
                        ...cardStyles, 
                        height: '100%',
                        cursor: 'pointer',
                        transition: ANIMATIONS.transition.medium,
                        '&:hover': {
                          transform: 'translateY(-2px)',
                          boxShadow: theme.shadows[3]
                        }
                      }}>
                        <CardContent>
                          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>
                            <Typography variant="h6" sx={{ fontWeight: 600, color: colors.textPrimary }}>
                              {service.name}
                            </Typography>
                            <Chip label={service.distance} size="small" color="primary" />
                          </Box>
                          
                          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
                            <LocationIcon sx={{ fontSize: 16, color: colors.textSecondary, mr: 1 }} />
                            <Typography variant="body2" sx={{ color: colors.textSecondary }}>
                              {service.address}
                            </Typography>
                          </Box>
                          
                          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                            <Rating value={service.rating} precision={0.1} size="small" readOnly />
                            <Typography variant="body2" sx={{ ml: 1, color: colors.textSecondary }}>
                              {service.rating} ({service.reviews} –æ—Ç–∑—ã–≤–æ–≤)
                            </Typography>
                          </Box>
                          
                          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                            <ScheduleIcon sx={{ fontSize: 16, color: colors.textSecondary, mr: 1 }} />
                            <Typography variant="body2" sx={{ color: colors.textSecondary }}>
                              {service.workingHours}
                            </Typography>
                          </Box>
                          
                          <Box sx={{ mb: 2 }}>
                            <Typography variant="body2" sx={{ color: colors.textSecondary, mb: 1 }}>
                              –£—Å–ª—É–≥–∏:
                            </Typography>
                            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>
                              {service.services.map((srv) => (
                                <Chip key={srv} label={srv} size="small" variant="outlined" />
                              ))}
                            </Box>
                          </Box>
                        </CardContent>
                        
                        <CardActions sx={{ justifyContent: 'space-between', px: 2, pb: 2 }}>
                          <Button 
                            size="small" 
                            startIcon={<PhoneIcon />}
                            sx={{ color: colors.textSecondary }}
                          >
                            –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                          </Button>
                          <Button 
                            variant="contained" 
                            size="small"
                            sx={buttonStyles}
                            onClick={() => navigate('/client/booking', { state: { servicePoint: service } })}
                          >
                            –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
                          </Button>
                        </CardActions>
                      </Card>
                    </Fade>
                  </Grid>
                ))}
              </Grid>
              
              <Box sx={{ textAlign: 'center', mt: 4 }}>
                <Button 
                  variant="outlined" 
                  size="large"
                  startIcon={<MapIcon />}
                  sx={secondaryButtonStyles}
                  onClick={() => navigate('/client/search')}
                >
                  –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞ –∫–∞—Ä—Ç–µ
                </Button>
              </Box>
            </Box>
          </Fade>
        </Container>
      </Box>

      {/* –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π */}
      <Fade in timeout={1100}>
        <Container maxWidth="lg" sx={{ py: 8 }}>
          <Typography variant="h3" sx={{ 
            textAlign: 'center', 
            mb: 6, 
            fontWeight: 700,
            color: colors.textPrimary 
          }}>
            üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏
          </Typography>
          
          <Grid container spacing={3}>
            {recentArticles.map((article, index) => (
              <Grid item xs={12} md={4} key={article.id}>
                <Fade in timeout={1200 + index * 100}>
                  <Card sx={{ 
                    ...cardStyles, 
                    height: '100%',
                    cursor: 'pointer',
                    transition: ANIMATIONS.transition.medium,
                    '&:hover': {
                      transform: 'translateY(-2px)',
                      boxShadow: theme.shadows[3]
                    }
                  }}>
                    <Box sx={{ 
                      height: 200, 
                      bgcolor: colors.backgroundField,
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center',
                      fontSize: '4rem'
                    }}>
                      üìñ
                    </Box>
                    <CardContent>
                      <Typography variant="h6" sx={{ fontWeight: 600, mb: 1, color: colors.textPrimary }}>
                        {article.title}
                      </Typography>
                      <Typography variant="body2" sx={{ color: colors.textSecondary, mb: 2 }}>
                        {article.excerpt}
                      </Typography>
                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                        <Typography variant="caption" sx={{ color: colors.textSecondary }}>
                          {article.author}
                        </Typography>
                        <Chip label={article.readTime} size="small" variant="outlined" />
                      </Box>
                    </CardContent>
                    <CardActions>
                      <Button 
                        size="small" 
                        sx={{ color: theme.palette.primary.main }}
                        onClick={() => navigate(`/knowledge-base/${article.id}`)}
                      >
                        –ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ
                      </Button>
                    </CardActions>
                  </Card>
                </Fade>
              </Grid>
            ))}
          </Grid>
          
          <Box sx={{ textAlign: 'center', mt: 4 }}>
            <Button 
              variant="outlined" 
              size="large"
              startIcon={<ArticleIcon />}
              sx={secondaryButtonStyles}
              onClick={() => navigate('/knowledge-base')}
            >
              –í—Å–µ —Å—Ç–∞—Ç—å–∏
            </Button>
          </Box>
        </Container>
      </Fade>

      {/* CTA —Å–µ–∫—Ü–∏—è */}
      <Box sx={{
        background: `linear-gradient(135deg, ${theme.palette.primary.main} 0%, ${theme.palette.primary.dark} 100%)`,
        color: 'white',
        py: 6
      }}>
        <Container maxWidth="md">
          <Box sx={{ textAlign: 'center' }}>
            <Typography variant="h4" sx={{ fontWeight: 700, mb: 2 }}>
              –ì–æ—Ç–æ–≤—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ?
            </Typography>
            <Typography variant="h6" sx={{ mb: 4, opacity: 0.9 }}>
              –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ –±–ª–∏–∂–∞–π—à–∏–π —Å–µ—Ä–≤–∏—Å
            </Typography>
            <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', flexWrap: 'wrap' }}>
              <Button 
                variant="contained" 
                size="large"
                startIcon={<BookIcon />}
                sx={{ 
                  bgcolor: 'white', 
                  color: theme.palette.primary.main,
                  '&:hover': { bgcolor: 'rgba(255,255,255,0.9)' }
                }}
                onClick={() => navigate('/client/booking')}
              >
                –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –æ–Ω–ª–∞–π–Ω
              </Button>
              <Button 
                variant="outlined" 
                size="large"
                startIcon={<PersonIcon />}
                sx={{ 
                  borderColor: 'white', 
                  color: 'white',
                  '&:hover': { 
                    borderColor: 'white', 
                    bgcolor: 'rgba(255,255,255,0.1)' 
                  }
                }}
                onClick={() => navigate('/client/profile')}
              >
                –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
              </Button>
            </Box>
          </Box>
        </Container>
      </Box>

      {/* –§—É—Ç–µ—Ä */}
      <Box sx={{ bgcolor: colors.backgroundCard, py: 4, borderTop: `1px solid ${colors.borderPrimary}` }}>
        <Container maxWidth="lg">
          <Grid container spacing={4}>
            <Grid item xs={12} md={4}>
              <Typography variant="h6" sx={{ fontWeight: 700, mb: 2, color: colors.textPrimary }}>
                üöó –¢–≤–æ—è –®–∏–Ω–∞
              </Typography>
              <Typography variant="body2" sx={{ color: colors.textSecondary, mb: 2 }}>
                –ù–∞–π–¥–∏—Ç–µ –ª—É—á—à–∏–π —à–∏–Ω–æ–º–æ–Ω—Ç–∞–∂ —Ä—è–¥–æ–º —Å –≤–∞–º–∏. –ë—ã—Å—Ç—Ä–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞.
              </Typography>
              <Box sx={{ display: 'flex', gap: 1 }}>
                <IconButton size="small">
                  <PhoneIcon />
                </IconButton>
                <IconButton size="small">
                  <EmailIcon />
                </IconButton>
              </Box>
            </Grid>
            <Grid item xs={12} md={4}>
              <Typography variant="h6" sx={{ fontWeight: 600, mb: 2, color: colors.textPrimary }}>
                –£—Å–ª—É–≥–∏
              </Typography>
              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>
                <Link to="/client/services" style={{ color: colors.textSecondary, textDecoration: 'none' }}>
                  –ó–∞–º–µ–Ω–∞ —à–∏–Ω
                </Link>
                <Link to="/client/services" style={{ color: colors.textSecondary, textDecoration: 'none' }}>
                  –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞
                </Link>
                <Link to="/client/services" style={{ color: colors.textSecondary, textDecoration: 'none' }}>
                  –†–µ–º–æ–Ω—Ç –ø—Ä–æ–∫–æ–ª–æ–≤
                </Link>
              </Box>
            </Grid>
            <Grid item xs={12} md={4}>
              <Typography variant="h6" sx={{ fontWeight: 600, mb: 2, color: colors.textPrimary }}>
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </Typography>
              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>
                <Link to="/knowledge-base" style={{ color: colors.textSecondary, textDecoration: 'none' }}>
                  –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
                </Link>
                <Link to="/client/profile" style={{ color: colors.textSecondary, textDecoration: 'none' }}>
                  –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
                </Link>
                <Link to="/login" style={{ color: colors.textSecondary, textDecoration: 'none' }}>
                  –î–ª—è –±–∏–∑–Ω–µ—Å–∞
                </Link>
              </Box>
            </Grid>
          </Grid>
          
          <Box sx={{ 
            textAlign: 'center', 
            mt: 4, 
            pt: 4, 
            borderTop: `1px solid ${colors.borderPrimary}` 
          }}>
            <Typography variant="body2" sx={{ color: colors.textSecondary }}>
              ¬© 2024 –¢–≤–æ—è –®–∏–Ω–∞. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
            </Typography>
          </Box>
        </Container>
      </Box>
    </Box>
  );
};

export default ClientMainPage; 