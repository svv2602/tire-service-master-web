import React, { useState, useEffect } from 'react';
import { Container, Typography, Box, Paper, Tabs, Tab, CircularProgress, Alert, useTheme, Button, useMediaQuery } from '@mui/material';
import { useGetBookingsByClientQuery } from '../../api/bookings.api';
import { useGetCurrentUserQuery } from '../../api/auth.api';
import { useGetClientMeQuery } from '../../api/clientAuth.api';
import { useSelector } from 'react-redux';
import { selectCurrentUser } from '../../store/slices/authSlice';
import { RootState } from '../../store';
import BookingsList from '../../components/bookings/BookingsList';
import BookingFilters from '../../components/bookings/BookingFilters';
import LoginPrompt from '../../components/auth/LoginPrompt';
import { BookingStatusKey, BOOKING_STATUSES } from '../../types/booking';
import { useTranslation } from 'react-i18next';
import { Booking as ModelBooking } from '../../types/models';
import { Booking } from '../../types/booking';
import { getThemeColors, getButtonStyles } from '../../styles';
import { Add as AddIcon } from '@mui/icons-material';
import { useNavigate, useLocation } from 'react-router-dom';
import ClientLayout from '../../components/client/ClientLayout';
import { convertStatusToKey, isCancelledStatus } from '../../utils/bookingStatus';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ Booking
const convertBooking = (modelBooking: ModelBooking): Booking => {
  // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏–∑ API –æ—Ç–≤–µ—Ç–∞ - —Ç–µ–ø–µ—Ä—å —ç—Ç–æ –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–æ–∫–∞
  const statusName = modelBooking.status || 'pending';
    
  return {
    id: String(modelBooking.id),
    client_id: String(modelBooking.client_id),
    service_point_id: String(modelBooking.service_point_id),
    car_id: modelBooking.car_id ? String(modelBooking.car_id) : null,
    car_type_id: String(modelBooking.car_type_id),
    slot_id: String(modelBooking.slot_id || 0),
    booking_date: modelBooking.booking_date,
    start_time: modelBooking.start_time,
    end_time: modelBooking.end_time,
    notes: modelBooking.notes,
    is_service_booking: modelBooking.is_service_booking || false, // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    service_category: modelBooking.service_category,
    service_point: modelBooking.service_point ? {
      id: modelBooking.service_point.id,
      name: modelBooking.service_point.name,
      address: modelBooking.service_point.address,
      phone: modelBooking.service_point.phone || modelBooking.service_point.contact_phone,
      city: modelBooking.service_point.city
    } : undefined,
    services: modelBooking.services?.map(s => ({
      service_id: String(s.service_id),
      quantity: s.quantity,
      price: s.price
    })) || [],
    status: convertStatusToKey(statusName),
    scheduled_at: modelBooking.booking_date + ' ' + modelBooking.start_time,
    created_at: modelBooking.created_at,
    updated_at: modelBooking.updated_at
  };
};

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
interface BookingsFilter {
  status?: BookingStatusKey;
  dateFrom?: string;
  dateTo?: string;
}

const MyBookingsPage: React.FC = () => {
  const { t } = useTranslation();
  const theme = useTheme();
  const colors = getThemeColors(theme);
  const primaryButtonStyles = getButtonStyles(theme, 'primary');
  const navigate = useNavigate();
  const location = useLocation();
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö —Ç–∞–±–æ–≤
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));
  
  const currentUser = useSelector(selectCurrentUser);
  const { isAuthenticated, isInitialized, loading } = useSelector((state: RootState) => state.auth);
  const [tabValue, setTabValue] = useState<number>(0);
  const [filters, setFilters] = useState<BookingsFilter>({
    status: BOOKING_STATUSES.PENDING,
  });
  const [showWelcomeMessage, setShowWelcomeMessage] = useState(false);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç (–∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤)
  useEffect(() => {
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.get('newAccount') === 'true') {
      setShowWelcomeMessage(true);
      // –£–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ URL
      window.history.replaceState({}, '', window.location.pathname);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä tab –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
    const tabParam = urlParams.get('tab');
    if (tabParam) {
      switch (tabParam) {
        case 'pending':
          setTabValue(0);
          setFilters({ ...filters, status: BOOKING_STATUSES.PENDING });
          break;
        case 'confirmed':
          setTabValue(1);
          setFilters({ ...filters, status: BOOKING_STATUSES.CONFIRMED });
          break;
        case 'completed':
          setTabValue(2);
          setFilters({ ...filters, status: BOOKING_STATUSES.COMPLETED });
          break;
        case 'cancelled':
          setTabValue(3);
          setFilters({ ...filters, status: undefined }); // –î–ª—è –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö —É–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞
          break;
        default:
          // –û—Å—Ç–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
          break;
      }
      // –£–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä tab –∏–∑ URL –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
      window.history.replaceState({}, '', window.location.pathname);
    }
  }, []);

  // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ API
  // –î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π endpoint /clients/me
  const { data: userFromApi, isLoading: isLoadingUser, error: userError } = useGetCurrentUserQuery(undefined, {
    skip: !currentUser || currentUser.role === 'client' // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
  });
  
  // –î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º /clients/me
  const { data: clientFromApi, isLoading: isLoadingClient, error: clientError } = useGetClientMeQuery(undefined, {
    skip: !currentUser || currentUser.role !== 'client' // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
  });

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º client_id –∏–∑ API –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∏–∑ Redux
  const clientId = clientFromApi?.client?.id || userFromApi?.user?.client_id || currentUser?.client_id;
  
  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  console.log('üîç MyBookingsPage - –æ—Ç–ª–∞–¥–∫–∞ clientId:', {
    currentUser,
    clientFromApi,
    userFromApi,
    clientId,
    isLoadingClient,
    isLoadingUser,
    clientError,
    userError
  });
  
  // –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –∫–ª–∏–µ–Ω—Ç–∞
  const { data: bookingsData, isLoading, isError, error, refetch } = useGetBookingsByClientQuery(
    clientId ? String(clientId) : '', 
    { skip: !clientId }
  );
  
  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
  console.log('üìã MyBookingsPage - –æ—Ç–ª–∞–¥–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:', {
    clientId,
    bookingsData,
    isLoading,
    isError,
    error,
    skip: !clientId
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏
  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {
    setTabValue(newValue);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
    if (newValue === 0) {
      setFilters({ ...filters, status: BOOKING_STATUSES.PENDING });
    } else if (newValue === 1) {
      setFilters({ ...filters, status: BOOKING_STATUSES.CONFIRMED });
    } else if (newValue === 2) {
      setFilters({ ...filters, status: BOOKING_STATUSES.COMPLETED });
    } else if (newValue === 3) {
      // –î–ª—è –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ —Å –ª—é–±—ã–º —Å—Ç–∞—Ç—É—Å–æ–º –æ—Ç–º–µ–Ω—ã
      setFilters({ ...filters, status: undefined }); // –£–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞, –±—É–¥–µ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleFilterChange = (newFilters: Partial<BookingsFilter>) => {
    setFilters({ ...filters, ...newFilters });
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
  const handleNewBooking = () => {
    navigate('/client/booking');
  };

  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
  const convertedBookings = bookingsData?.data
    ? bookingsData.data
        .map(booking => {
          const converted = convertBooking(booking);
          return converted;
        })
        .filter(booking => {
          // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ (–æ–±—â–∞—è –¥–ª—è –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫)
          let dateOk = true;
          if (filters.dateFrom) {
            dateOk = dateOk && booking.booking_date >= filters.dateFrom;
          }
          if (filters.dateTo) {
            dateOk = dateOk && booking.booking_date <= filters.dateTo;
          }
          if (!dateOk) return false;

          // –î–ª—è –≤–∫–ª–∞–¥–∫–∏ t('client.myBookings.cancelled') (tabValue === 3) –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
          if (tabValue === 3) {
            return isCancelledStatus(String(booking.status));
          }
          // –î–ª—è –≤–∫–ª–∞–¥–∫–∏ t('client.myBookings.confirmed') (tabValue === 1) –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
          if (tabValue === 1) {
            return booking.status === BOOKING_STATUSES.CONFIRMED || 
                   booking.status === BOOKING_STATUSES.IN_PROGRESS;
          }
          // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞—Ç—É—Å–∞
          if (filters.status !== undefined) {
            return booking.status === filters.status;
          }
          return true;
        })
        .sort((a, b) => {
          // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç —Å–∞–º—ã—Ö —Å–≤–µ–∂–∏—Ö –∫ —Å—Ç–∞—Ä—ã–º –ø–æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
          const dateTimeA = new Date(`${a.booking_date}T${a.start_time}`).getTime();
          const dateTimeB = new Date(`${b.booking_date}T${b.start_time}`).getTime();
          return dateTimeB - dateTimeA; // –£–±—ã–≤–∞—é—â–∏–π –ø–æ—Ä—è–¥–æ–∫ (—Å–≤–µ–∂–∏–µ —Å–≤–µ—Ä—Ö—É)
        })
    : [];

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∏–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
  if (!isInitialized || loading || isLoadingUser || isLoadingClient) {
    return (
      <ClientLayout>
        <Box sx={{ minHeight: '100vh', bgcolor: colors.backgroundPrimary, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>
          <CircularProgress />
          <Typography sx={{ ml: 2 }}>{t('forms.clientPages.myBookings.loading')}</Typography>
        </Box>
      </ClientLayout>
    );
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤–æ–π—Ç–∏
  if (!isAuthenticated || !currentUser) {
    return <LoginPrompt />;
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç client_id, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  if (!clientId) {
    return (
      <ClientLayout>
        <Box sx={{ minHeight: '100vh', bgcolor: colors.backgroundPrimary }}>
          <Container maxWidth="lg" sx={{ py: 4 }}>
            <Alert severity="error">
              <Typography variant="h6" gutterBottom>
                {t('forms.clientPages.myBookings.clientProfileError')}
              </Typography>
              <Typography variant="body2" component="div">
                {t('forms.clientPages.myBookings.error')}: {userError ? JSON.stringify(userError) : clientError ? JSON.stringify(clientError) : t('forms.clientPages.myBookings.unknownError')}
              </Typography>
              <Button 
                variant="outlined" 
                onClick={() => window.location.reload()} 
                sx={{ mt: 2 }}
              >
                {t('forms.clientPages.myBookings.reloadPage')}
              </Button>
            </Alert>
          </Container>
        </Box>
      </ClientLayout>
    );
  }

  return (
    <ClientLayout>
      <Box sx={{ minHeight: '100vh', bgcolor: colors.backgroundPrimary }}>
        <Container maxWidth="lg" sx={{ py: 4 }}>
          {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
          {showWelcomeMessage && (
            <Alert 
              severity="success" 
              sx={{ mb: 3 }}
              onClose={() => setShowWelcomeMessage(false)}
            >
              <Typography variant="body1" sx={{ fontWeight: 'bold', mb: 1 }}>
                {t('forms.clientPages.myBookings.welcome')}
              </Typography>
              <Typography variant="body2">
                {t('forms.clientPages.myBookings.welcomeMessage')}
              </Typography>
            </Alert>
          )}

          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–Ω–æ–ø–∫–æ–π —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ */}
          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>
            <Typography variant="h4" component="h1">
              {t('forms.clientPages.myBookings.title')} {clientFromApi?.user ? `(${clientFromApi.user.first_name} ${clientFromApi.user.last_name})` : `(Client ID: ${clientId})`}
            </Typography>
            
            <Button
              variant="contained"
              startIcon={<AddIcon />}
              onClick={handleNewBooking}
              sx={primaryButtonStyles}
            >
              {t('forms.clientPages.myBookings.newBooking')}
            </Button>
          </Box>
          
          {/* –í–∫–ª–∞–¥–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ - –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
          <Paper sx={{ mb: 3 }}>
            <Tabs 
              value={tabValue} 
              onChange={handleTabChange}
              indicatorColor="primary"
              textColor="primary"
              variant={isMobile ? "scrollable" : "fullWidth"}
              scrollButtons={isMobile ? "auto" : false}
              allowScrollButtonsMobile={isMobile}
              sx={{
                // –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —Ç–∞–±–æ–≤
                '& .MuiTab-root': {
                  minWidth: isMobile ? 80 : 'auto',
                  fontSize: isMobile ? '0.8rem' : '0.875rem',
                  fontWeight: 500,
                  textTransform: 'none',
                  px: isMobile ? 1 : 2,
                },
                // –°—Ç–∏–ª—å –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —Ç–∞–±–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
                '& .MuiTabs-scrollButtons': {
                  color: theme.palette.primary.main,
                  '&.Mui-disabled': {
                    opacity: 0.3,
                  },
                },
              }}
            >
              <Tab 
                label={isMobile 
                  ? t('forms.clientPages.myBookings.upcomingShort') || '–ü—Ä–µ–¥—Å—Ç.' 
                  : t('forms.clientPages.myBookings.upcoming')
                } 
              />
              <Tab 
                label={isMobile 
                  ? t('forms.clientPages.myBookings.confirmedShort') || '–ü–æ–¥—Ç–≤.' 
                  : t('forms.clientPages.myBookings.confirmed')
                } 
              />
              <Tab 
                label={isMobile 
                  ? t('forms.clientPages.myBookings.completedShort') || '–ó–∞–≤–µ—Ä.' 
                  : t('forms.clientPages.myBookings.completed')
                } 
              />
              <Tab 
                label={isMobile 
                  ? t('forms.clientPages.myBookings.cancelledShort') || '–û—Ç–º–µ–Ω.' 
                  : t('forms.clientPages.myBookings.cancelled')
                } 
              />
            </Tabs>
          </Paper>
          
          {/* –§–∏–ª—å—Ç—Ä—ã */}
          <BookingFilters 
            filters={filters} 
            onFilterChange={handleFilterChange} 
          />
          
          {/* –°–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π */}
          <Box mt={3}>
            {isLoading ? (
              <Box display="flex" justifyContent="center" my={4}>
                <CircularProgress />
                <Typography sx={{ ml: 2 }}>
                  {t('forms.clientPages.myBookings.loadingBookings', { clientId })}
                </Typography>
              </Box>
            ) : isError ? (
              <Alert severity="error" sx={{ mb: 2 }}>
                {t('forms.clientPages.myBookings.loadingError')}
                <br />
                <Typography variant="body2" sx={{ mt: 1 }}>
                  {t('forms.clientPages.myBookings.error')}: {error ? JSON.stringify(error) : t('forms.clientPages.myBookings.unknownError')}
                </Typography>
                <Button 
                  variant="outlined" 
                  size="small" 
                  onClick={() => refetch()}
                  sx={{ ml: 2 }}
                >
                  {t('forms.clientPages.myBookings.retry')}
                </Button>
              </Alert>
            ) : convertedBookings.length > 0 ? (
              <BookingsList 
                bookings={convertedBookings} 
                onBookingUpdated={refetch}
              />
            ) : (
              <Alert severity="info" sx={{ textAlign: 'center', py: 4 }}>
                <Typography variant="h6" gutterBottom>
                  {t('forms.clientPages.myBookings.noBookings')}
                </Typography>
                <Typography variant="body2" color="textSecondary" sx={{ mb: 2 }}>
                  {tabValue === 0 && t('forms.clientPages.myBookings.noUpcomingBookings')}
                  {tabValue === 1 && t('forms.clientPages.myBookings.noConfirmedBookings')}
                  {tabValue === 2 && t('forms.clientPages.myBookings.noCompletedBookings')}
                  {tabValue === 3 && t('forms.clientPages.myBookings.noCancelledBookings')}
                </Typography>
                <Button
                  variant="contained"
                  startIcon={<AddIcon />}
                  onClick={handleNewBooking}
                  sx={primaryButtonStyles}
                >
                  {t('forms.clientPages.myBookings.createFirstBooking')}
                </Button>
              </Alert>
            )}
          </Box>
        </Container>
      </Box>
    </ClientLayout>
  );
};

export default MyBookingsPage; 