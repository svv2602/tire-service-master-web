import React, { useState, useEffect } from 'react';
import { Container, Typography, Box, Paper, Tabs, Tab, CircularProgress, Alert, useTheme, Button } from '@mui/material';
import { useGetBookingsByClientQuery } from '../../api/bookings.api';
import { useGetCurrentUserQuery } from '../../api/auth.api';
import { useSelector } from 'react-redux';
import { selectCurrentUser } from '../../store/slices/authSlice';
import BookingsList from '../../components/bookings/BookingsList';
import BookingFilters from '../../components/bookings/BookingFilters';
import LoginPrompt from '../../components/auth/LoginPrompt';
import { BookingStatusEnum } from '../../types/booking';
import { useTranslation } from 'react-i18next';
import { Booking as ModelBooking } from '../../types/models';
import { Booking } from '../../types/booking';
import { getThemeColors, getButtonStyles } from '../../styles';
import { Add as AddIcon } from '@mui/icons-material';
import { useNavigate } from 'react-router-dom';
import ClientLayout from '../../components/client/ClientLayout';
import { convertStatusToEnum, isCancelledStatus } from '../../utils/bookingStatus';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ Booking
const convertBooking = (modelBooking: ModelBooking): Booking => {
  // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏–∑ API –æ—Ç–≤–µ—Ç–∞
  const statusName = typeof modelBooking.status === 'string' 
    ? modelBooking.status 
    : modelBooking.status?.name || 'pending';
    
  return {
    id: String(modelBooking.id),
    client_id: String(modelBooking.client_id),
    service_point_id: String(modelBooking.service_point_id),
    car_id: modelBooking.car_id ? String(modelBooking.car_id) : null,
    car_type_id: String(modelBooking.car_type_id),
    slot_id: String(modelBooking.slot_id || 0),
    booking_date: modelBooking.booking_date,
    start_time: modelBooking.start_time,
    end_time: modelBooking.end_time,
    notes: modelBooking.notes,
    status_id: modelBooking.status_id,
    service_category: modelBooking.service_category,
    service_point: modelBooking.service_point ? {
      id: modelBooking.service_point.id,
      name: modelBooking.service_point.name,
      address: modelBooking.service_point.address,
      phone: modelBooking.service_point.phone || modelBooking.service_point.contact_phone,
      city: modelBooking.service_point.city
    } : undefined,
    services: modelBooking.services?.map(s => ({
      service_id: String(s.service_id),
      quantity: s.quantity,
      price: s.price
    })) || [],
    status: convertStatusToEnum({ name: statusName }), // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –∏–º–µ–Ω–µ–º —Å—Ç–∞—Ç—É—Å–∞
    scheduled_at: modelBooking.booking_date + ' ' + modelBooking.start_time,
    created_at: modelBooking.created_at,
    updated_at: modelBooking.updated_at
  };
};

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
interface BookingsFilter {
  status?: BookingStatusEnum;
  dateFrom?: string;
  dateTo?: string;
}

const MyBookingsPage: React.FC = () => {
  const { t } = useTranslation();
  const theme = useTheme();
  const colors = getThemeColors(theme);
  const primaryButtonStyles = getButtonStyles(theme, 'primary');
  const navigate = useNavigate();
  
  const currentUser = useSelector(selectCurrentUser);
  const [tabValue, setTabValue] = useState<number>(0);
  const [filters, setFilters] = useState<BookingsFilter>({
    status: BookingStatusEnum.PENDING,
  });

  // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ API
  const { data: userFromApi, isLoading: isLoadingUser, error: userError } = useGetCurrentUserQuery(undefined, {
    skip: !currentUser // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  });

  // ‚úÖ –û–¢–õ–ê–î–û–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
  useEffect(() => {
    console.log('üîç MyBookingsPage Debug Info:');
    console.log('- currentUser (Redux):', currentUser);
    console.log('- userFromApi (RTK Query):', userFromApi);
    console.log('- isLoadingUser:', isLoadingUser);
    console.log('- userError:', userError);
    console.log('- currentUser?.client_id:', currentUser?.client_id);
    console.log('- userFromApi?.client_id:', userFromApi?.client_id);
  }, [currentUser, userFromApi, isLoadingUser, userError]);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º client_id –∏–∑ API –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∏–∑ Redux
  const clientId = userFromApi?.client_id || currentUser?.client_id;
  
  // ‚úÖ –û–¢–õ–ê–î–û–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –î–õ–Ø CLIENT_ID
  useEffect(() => {
    console.log('üéØ Client ID Resolution:');
    console.log('- Final clientId:', clientId);
    console.log('- Type of clientId:', typeof clientId);
    console.log('- Will skip bookings query?', !clientId);
  }, [clientId]);
  
  // –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –∫–ª–∏–µ–Ω—Ç–∞
  const { data: bookingsData, isLoading, isError, error, refetch } = useGetBookingsByClientQuery(
    clientId ? String(clientId) : '', 
    { skip: !clientId }
  );

  // ‚úÖ –û–¢–õ–ê–î–û–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –î–õ–Ø –ë–†–û–ù–ò–†–û–í–ê–ù–ò–ô
  useEffect(() => {
    console.log('üìã Bookings Query Debug:');
    console.log('- bookingsData:', bookingsData);
    console.log('- isLoading:', isLoading);
    console.log('- isError:', isError);
    console.log('- error:', error);
    console.log('- Query clientId parameter:', clientId ? String(clientId) : '');
    console.log('- Skip condition:', !clientId);
  }, [bookingsData, isLoading, isError, error, clientId]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏
  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {
    setTabValue(newValue);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
    if (newValue === 0) {
      setFilters({ ...filters, status: BookingStatusEnum.PENDING });
    } else if (newValue === 1) {
      setFilters({ ...filters, status: BookingStatusEnum.CONFIRMED });
    } else if (newValue === 2) {
      setFilters({ ...filters, status: BookingStatusEnum.COMPLETED });
    } else if (newValue === 3) {
      // –î–ª—è –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ —Å –ª—é–±—ã–º —Å—Ç–∞—Ç—É—Å–æ–º –æ—Ç–º–µ–Ω—ã
      setFilters({ ...filters, status: undefined }); // –£–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞, –±—É–¥–µ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleFilterChange = (newFilters: Partial<BookingsFilter>) => {
    setFilters({ ...filters, ...newFilters });
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
  const handleNewBooking = () => {
    navigate('/client/booking');
  };

  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
  const convertedBookings = bookingsData?.data
    ? bookingsData.data
        .map(booking => {
          const converted = convertBooking(booking);
          console.log('üîÑ Converting booking:', {
            original: booking,
            converted: converted,
            originalStatus: booking.status,
            convertedStatus: converted.status
          });
          return converted;
        })
        .filter(booking => {
          console.log('üîç Filtering booking:', {
            bookingId: booking.id,
            bookingStatus: booking.status,
            tabValue: tabValue,
            filterStatus: filters.status,
            isCancelled: isCancelledStatus(booking.status)
          });
          
          // –î–ª—è –≤–∫–ª–∞–¥–∫–∏ "–û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ" (tabValue === 3) –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
          if (tabValue === 3) {
            const result = isCancelledStatus(booking.status);
            console.log('- Tab 3 (Cancelled) filter result:', result);
            return result;
          }
          // –î–ª—è –≤–∫–ª–∞–¥–∫–∏ "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ" (tabValue === 1) –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
          if (tabValue === 1) {
            const result = booking.status === BookingStatusEnum.CONFIRMED || 
                   booking.status === BookingStatusEnum.IN_PROGRESS;
            console.log('- Tab 1 (Confirmed) filter result:', result);
            return result;
          }
          // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞—Ç—É—Å–∞
          const result = booking.status === filters.status;
          console.log('- Default filter result:', result, `(${booking.status} === ${filters.status})`);
          return result;
        })
        .sort((a, b) => {
          // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç —Å–∞–º—ã—Ö —Å–≤–µ–∂–∏—Ö –∫ —Å—Ç–∞—Ä—ã–º –ø–æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
          const dateTimeA = new Date(`${a.booking_date}T${a.start_time}`).getTime();
          const dateTimeB = new Date(`${b.booking_date}T${b.start_time}`).getTime();
          return dateTimeB - dateTimeA; // –£–±—ã–≤–∞—é—â–∏–π –ø–æ—Ä—è–¥–æ–∫ (—Å–≤–µ–∂–∏–µ —Å–≤–µ—Ä—Ö—É)
        })
    : [];

  // ‚úÖ –û–¢–õ–ê–î–û–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –î–õ–Ø –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –§–ò–õ–¨–¢–†–ê–¶–ò–ò
  useEffect(() => {
    console.log('üìä Bookings Filter Results:');
    console.log('- Raw bookings count:', bookingsData?.data?.length || 0);
    console.log('- Filtered bookings count:', convertedBookings.length);
    console.log('- Current tab:', tabValue);
    console.log('- Current filter status:', filters.status);
    console.log('- Filtered bookings:', convertedBookings);
  }, [bookingsData, convertedBookings, tabValue, filters.status]);

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤–æ–π—Ç–∏
  if (!currentUser) {
    return <LoginPrompt />;
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç client_id, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
  if (!clientId) {
    return (
      <ClientLayout>
        <Box sx={{ minHeight: '100vh', bgcolor: colors.backgroundPrimary }}>
          <Container maxWidth="lg" sx={{ py: 4 }}>
            <Alert severity="error">
              <Typography variant="h6" gutterBottom>
                –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞
              </Typography>
              <Typography variant="body2" component="div">
                –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
                <br />‚Ä¢ currentUser: {currentUser ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'}
                <br />‚Ä¢ currentUser.client_id: {currentUser?.client_id || '–Ω–µ –∑–∞–¥–∞–Ω'}
                <br />‚Ä¢ userFromApi: {userFromApi ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'}
                <br />‚Ä¢ userFromApi.client_id: {userFromApi?.client_id || '–Ω–µ –∑–∞–¥–∞–Ω'}
                <br />‚Ä¢ isLoadingUser: {isLoadingUser ? '–¥–∞' : '–Ω–µ—Ç'}
                <br />‚Ä¢ userError: {userError ? JSON.stringify(userError) : '–Ω–µ—Ç'}
              </Typography>
              <Button 
                variant="outlined" 
                onClick={() => window.location.reload()} 
                sx={{ mt: 2 }}
              >
                –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
              </Button>
            </Alert>
          </Container>
        </Box>
      </ClientLayout>
    );
  }

  return (
    <ClientLayout>
      <Box sx={{ minHeight: '100vh', bgcolor: colors.backgroundPrimary }}>
        <Container maxWidth="lg" sx={{ py: 4 }}>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–Ω–æ–ø–∫–æ–π —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ */}
          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>
            <Typography variant="h4" component="h1">
              {t('–ú–æ–∏ –∑–∞–ø–∏—Å–∏')} (Client ID: {clientId})
            </Typography>
            
            <Button
              variant="contained"
              startIcon={<AddIcon />}
              onClick={handleNewBooking}
              sx={primaryButtonStyles}
            >
              –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å
            </Button>
          </Box>
          
          {/* –í–∫–ª–∞–¥–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ */}
          <Paper sx={{ mb: 3 }}>
            <Tabs 
              value={tabValue} 
              onChange={handleTabChange}
              indicatorColor="primary"
              textColor="primary"
              variant="fullWidth"
            >
              <Tab label={t('–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ')} />
              <Tab label={t('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ')} />
              <Tab label={t('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ')} />
              <Tab label={t('–û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ')} />
            </Tabs>
          </Paper>
          
          {/* –§–∏–ª—å—Ç—Ä—ã */}
          <BookingFilters 
            filters={filters} 
            onFilterChange={handleFilterChange} 
          />
          
          {/* –°–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π */}
          <Box mt={3}>
            {isLoading ? (
              <Box display="flex" justifyContent="center" my={4}>
                <CircularProgress />
                <Typography sx={{ ml: 2 }}>
                  –ó–∞–≥—Ä—É–∂–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ {clientId}...
                </Typography>
              </Box>
            ) : isError ? (
              <Alert severity="error" sx={{ mb: 2 }}>
                {t('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–ø–∏—Å–µ–π')}
                <br />
                <Typography variant="body2" sx={{ mt: 1 }}>
                  –û—à–∏–±–∫–∞: {error ? JSON.stringify(error) : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}
                  <br />
                  Client ID: {clientId}
                </Typography>
                <Button 
                  variant="outlined" 
                  size="small" 
                  onClick={() => refetch()}
                  sx={{ ml: 2 }}
                >
                  –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
                </Button>
              </Alert>
            ) : convertedBookings.length > 0 ? (
              <BookingsList 
                bookings={convertedBookings} 
              />
            ) : (
              <Alert severity="info" sx={{ textAlign: 'center', py: 4 }}>
                <Typography variant="h6" gutterBottom>
                  {t('–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π')}
                </Typography>
                <Typography variant="body2" color="textSecondary" sx={{ mb: 2 }}>
                  {tabValue === 0 && '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∑–∞–ø–∏—Å–µ–π'}
                  {tabValue === 1 && '–£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π'}
                  {tabValue === 2 && '–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π'}
                  {tabValue === 3 && '–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π'}
                  <br />
                  Client ID: {clientId}
                  <br />
                  –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –æ—Ç–≤–µ—Ç–µ: {bookingsData?.data?.length || 0}
                </Typography>
                <Button
                  variant="contained"
                  startIcon={<AddIcon />}
                  onClick={handleNewBooking}
                  sx={primaryButtonStyles}
                >
                  –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å
                </Button>
              </Alert>
            )}
          </Box>
        </Container>
      </Box>
    </ClientLayout>
  );
};

export default MyBookingsPage; 