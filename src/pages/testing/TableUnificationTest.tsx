import React, { useState } from 'react';
import { 
  Box, 
  Typography, 
  Button, 
  FormGroup, 
  FormControlLabel, 
  Switch,
  Divider
} from '@mui/material';
import { Table, Column } from '../../components/ui/Table/Table';
import { getTablePageStyles } from '../../styles/components';
import { useTheme } from '@mui/material/styles';

interface TestData {
  id: number;
  name: string;
  email: string;
  longUrl: string;
  status: string;
  description: string;
  date: string;
}

const generateTestData = (count: number = 10): TestData[] => {
  return Array.from({ length: count }, (_, index) => ({
    id: index + 1,
    name: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${index + 1}`,
    email: `user${index + 1}@example-very-long-domain-name.com`,
    longUrl: `https://very-long-domain-name-for-testing-word-wrap.com/api/v1/users/${index + 1}/profile/settings`,
    status: index % 3 === 0 ? '–ê–∫—Ç–∏–≤–µ–Ω' : index % 3 === 1 ? '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' : '–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
    description: `–û—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${index + 1} –∫–æ—Ç–æ—Ä–æ–µ –¥–æ–ª–∂–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è –ø–æ —Å–ª–æ–≤–∞–º –±–µ–∑ —Ä–∞–∑–±–∏–µ–Ω–∏—è —Å–ª–æ–≤ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã`,
    date: new Date(2025, 0, index + 1).toLocaleDateString('ru-RU')
  }));
};

export const TableUnificationTest: React.FC = () => {
  const theme = useTheme();
  const tablePageStyles = getTablePageStyles(theme);
  
  const [testData, setTestData] = useState<TestData[]>(generateTestData(10));
  const [loading, setLoading] = useState(false);
  const [showEmpty, setShowEmpty] = useState(false);
  const [responsive, setResponsive] = useState(true);

  const columns: Column[] = [
    {
      id: 'id',
      label: 'ID',
      minWidth: 50,
      maxWidth: 80,
      align: 'center',
      sticky: true,
    },
    {
      id: 'name',
      label: '–ò–º—è',
      minWidth: 120,
      wrap: true,
    },
    {
      id: 'email',
      label: 'Email',
      minWidth: 200,
      maxWidth: 250,
      ellipsis: true,
      hideOnMobile: true,
    },
    {
      id: 'longUrl',
      label: '–î–ª–∏–Ω–Ω—ã–π URL',
      minWidth: 200,
      maxWidth: 300,
      wrap: true,
      hideOnMobile: true,
    },
    {
      id: 'status',
      label: '–°—Ç–∞—Ç—É—Å',
      minWidth: 120,
      format: (value) => (
        <Box
          sx={{
            px: 1,
            py: 0.5,
            borderRadius: 1,
            fontSize: '0.75rem',
            fontWeight: 'medium',
            textAlign: 'center',
            backgroundColor: 
              value === '–ê–∫—Ç–∏–≤–µ–Ω' ? 'success.light' :
              value === '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' ? 'error.light' : 'warning.light',
            color: 
              value === '–ê–∫—Ç–∏–≤–µ–Ω' ? 'success.dark' :
              value === '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' ? 'error.dark' : 'warning.dark',
          }}
        >
          {value}
        </Box>
      ),
    },
    {
      id: 'description',
      label: '–û–ø–∏—Å–∞–Ω–∏–µ',
      minWidth: 300,
      wrap: true,
    },
    {
      id: 'date',
      label: '–î–∞—Ç–∞',
      minWidth: 100,
      align: 'center',
    },
  ];

  const handleLoadingTest = () => {
    setLoading(true);
    setTimeout(() => setLoading(false), 3000);
  };

  const handleEmptyTest = () => {
    setShowEmpty(!showEmpty);
    setTestData(showEmpty ? generateTestData(10) : []);
  };

  const handleRowClick = (row: TestData) => {
    alert(`–ö–ª–∏–∫ –ø–æ —Å—Ç—Ä–æ–∫–µ: ${row.name} (${row.email})`);
  };

  return (
    <Box sx={tablePageStyles.pageContainer}>
      <Typography variant="h4" sx={{ mb: 3 }}>
        üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü
      </Typography>

      <Box sx={{ mb: 3, p: 2, border: '1px solid', borderColor: 'divider', borderRadius: 1 }}>
        <Typography variant="h6" sx={{ mb: 2 }}>
          –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        </Typography>
        
        <FormGroup row sx={{ gap: 2 }}>
          <FormControlLabel
            control={<Switch checked={responsive} onChange={(e) => setResponsive(e.target.checked)} />}
            label="–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å"
          />
          <Button variant="outlined" onClick={handleLoadingTest} disabled={loading}>
            {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏'}
          </Button>
          <Button variant="outlined" onClick={handleEmptyTest}>
            {showEmpty ? '–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ' : '–¢–µ—Å—Ç –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è'}
          </Button>
          <Button variant="outlined" onClick={() => setTestData(generateTestData(50))}>
            –ú–Ω–æ–≥–æ –¥–∞–Ω–Ω—ã—Ö (50 —Å—Ç—Ä–æ–∫)
          </Button>
        </FormGroup>
      </Box>

      <Divider sx={{ my: 2 }} />

      <Typography variant="h6" sx={{ mb: 2 }}>
        –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
      </Typography>
      
      <Box sx={{ mb: 3 }}>
        <Typography variant="body2" component="ul" sx={{ pl: 2 }}>
          <li>‚úÖ <strong>–ü–µ—Ä–µ–Ω–æ—Å —Å–ª–æ–≤:</strong> –∫–æ–ª–æ–Ω–∫–∞ "–î–ª–∏–Ω–Ω—ã–π URL" –∏ "–û–ø–∏—Å–∞–Ω–∏–µ" —Å wrap: true</li>
          <li>‚úÖ <strong>–ú–Ω–æ–≥–æ—Ç–æ—á–∏–µ:</strong> –∫–æ–ª–æ–Ω–∫–∞ "Email" —Å ellipsis: true</li>
          <li>‚úÖ <strong>–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞:</strong> –∫–æ–ª–æ–Ω–∫–∞ "ID" —Å sticky: true</li>
          <li>‚úÖ <strong>–°–∫—Ä—ã—Ç–∏–µ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö:</strong> "Email" –∏ "URL" —Å hideOnMobile: true</li>
          <li>‚úÖ <strong>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —à–∏—Ä–∏–Ω—ã:</strong> maxWidth –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫</li>
          <li>‚úÖ <strong>–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:</strong> –∫–æ–ª–æ–Ω–∫–∞ "–°—Ç–∞—Ç—É—Å" —Å —Ü–≤–µ—Ç–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏</li>
          <li>‚úÖ <strong>–°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏:</strong> —Å–∫–µ–ª–µ—Ç–æ–Ω –∞–Ω–∏–º–∞—Ü–∏—è</li>
          <li>‚úÖ <strong>–ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:</strong> –∏–∫–æ–Ω–∫–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ</li>
          <li>‚úÖ <strong>–ö–ª–∏–∫ –ø–æ —Å—Ç—Ä–æ–∫–µ:</strong> –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ onRowClick</li>
          <li>‚úÖ <strong>–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å:</strong> —Å–∫—Ä—ã—Ç–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö</li>
        </Typography>
      </Box>

      <Table
        columns={columns}
        rows={testData}
        loading={loading}
        responsive={responsive}
        onRowClick={handleRowClick}
        stickyHeader
        maxHeight={600}
      />

      <Box sx={{ mt: 3, p: 2, backgroundColor: 'background.paper', borderRadius: 1 }}>
        <Typography variant="body2" color="text.secondary">
          <strong>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:</strong><br />
          1. –ò–∑–º–µ–Ω–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏<br />
          2. –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–ª–æ–Ω–∫–∏ ID<br />
          3. –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –ª—é–±—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π<br />
          4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤—ã—à–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –ø—É—Å—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        </Typography>
      </Box>
    </Box>
  );
};

export default TableUnificationTest; 