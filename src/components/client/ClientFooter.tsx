import React, { useState, useRef } from 'react';
import { useTranslation } from 'react-i18next';
import { Link } from 'react-router-dom';
import {
  Box,
  Container,
  Typography,
  Grid,
  IconButton,
  useTheme
} from '@mui/material';
import {
  Phone as PhoneIcon,
  Email as EmailIcon,
  Telegram as TelegramIcon
} from '@mui/icons-material';
// import QRCode from 'qrcode'; // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ
import { getThemeColors } from '../../styles';
import { useGetPageContentsQuery } from '../../api/pageContent.api';
import { useGetServiceCategoriesQuery } from '../../api/serviceCategories.api';

interface ClientFooterProps {
  botUsername?: string;
}

export const ClientFooter: React.FC<ClientFooterProps> = ({ 
  botUsername = 'tire_service_ua_bot' 
}) => {
  const { t } = useTranslation();
  const theme = useTheme();
  const colors = getThemeColors(theme);
  // QR –∫–æ–¥ –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ –ø—Ä–æ—Å—Ç—É—é —Å—Å—ã–ª–∫—É

  // API –∑–∞–ø—Ä–æ—Å –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Ñ—É—Ç–µ—Ä–∞
  const { data: pageContentData } = useGetPageContentsQuery({
    section: 'client_main'
  });

  // API –∑–∞–ø—Ä–æ—Å –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —É—Å–ª—É–≥
  const { data: categoriesData } = useGetServiceCategoriesQuery({
    active: true,
    per_page: 6
  });

  const pageContent = pageContentData?.data || [];
  const footerContent = pageContent.find(item => 
    item.content_type === 'text_block' && item.settings?.type === 'footer'
  );

  const serviceCategories = categoriesData?.data || [];

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞
  // –§—É–Ω–∫—Ü–∏—è –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è - QR –∫–æ–¥ –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É
  const generateQRCode = async () => {
    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∞
  };

  const handleTelegramClick = () => {
    // –ü—Ä–æ—Å—Ç–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ Telegram –±–æ—Ç–∞ –≤–º–µ—Å—Ç–æ QR –∫–æ–¥–∞
    const botUrl = `https://t.me/${botUsername}`;
    window.open(botUrl, '_blank');
  };

  return (
    <>
      <Box sx={{ 
        bgcolor: colors.backgroundCard, 
        py: 4, 
        borderTop: `1px solid ${colors.borderPrimary}`,
        mt: 'auto' // –ü—Ä–∏–∂–∏–º–∞–µ–º —Ñ—É—Ç–µ—Ä –∫ –Ω–∏–∑—É
      }}>
        <Container maxWidth="lg">
          <Grid container spacing={4}>
            <Grid item xs={12} md={4}>
              <Typography variant="h6" sx={{ fontWeight: 700, mb: 2, color: colors.textPrimary }}>
                üöó –¢–≤–æ—è –®–∏–Ω–∞
              </Typography>
              <Typography variant="body2" sx={{ color: colors.textSecondary, mb: 2 }}>
                –ó–Ω–∞–π–¥—ñ—Ç—å –Ω–∞–π–∫—Ä–∞—â–∏–π –∞–≤—Ç–æ—Å–µ—Ä–≤—ñ—Å –ø–æ—Ä—É—á –∑ –≤–∞–º–∏. –®–≤–∏–¥–∫–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è, –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ –º–∞–π—Å—Ç—Ä–∏.
              </Typography>
              <Box sx={{ display: 'flex', gap: 1 }}>
                <IconButton size="small" sx={{ color: colors.textSecondary }}>
                  <PhoneIcon />
                </IconButton>
                <IconButton size="small" sx={{ color: colors.textSecondary }}>
                  <EmailIcon />
                </IconButton>
                <IconButton 
                  size="small" 
                  onClick={handleTelegramClick}
                  sx={{ 
                    color: '#0088cc',
                    '&:hover': {
                      bgcolor: 'rgba(0, 136, 204, 0.1)'
                    }
                  }}
                  title="–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ Telegram –±–æ—Ç–∞"
                >
                  <TelegramIcon />
                </IconButton>
              </Box>
            </Grid>
            
            <Grid item xs={12} md={4}>
              <Typography variant="h6" sx={{ fontWeight: 600, mb: 2, color: colors.textPrimary }}>
                –ü–æ—Å–ª—É–≥–∏
              </Typography>
              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>
                {(serviceCategories.length > 0 ? serviceCategories : [
                  { id: 1, name: '–ó–∞–º—ñ–Ω–∞ —à–∏–Ω' },
                  { id: 2, name: '–ë–∞–ª–∞–Ω—Å—É–≤–∞–Ω–Ω—è' },
                  { id: 3, name: '–†–µ–º–æ–Ω—Ç –ø—Ä–æ–∫–æ–ª—ñ–≤' }
                ]).slice(0, 3).map((category) => (
                  <Link 
                    key={category.id} 
                    to="/client/services"
                    style={{ 
                      color: colors.textSecondary, 
                      textDecoration: 'none'
                    }}
                  >
                    {category.name}
                  </Link>
                ))}
              </Box>
            </Grid>
            
            <Grid item xs={12} md={4}>
              <Typography variant="h6" sx={{ fontWeight: 600, mb: 2, color: colors.textPrimary }}>
                –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
              </Typography>
              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>
                <Link 
                  to="/knowledge-base" 
                  style={{ 
                    color: colors.textSecondary, 
                    textDecoration: 'none'
                  }}
                >
                  –ë–∞–∑–∞ –∑–Ω–∞–Ω—å
                </Link>
                <Link 
                  to="/client/profile" 
                  style={{ 
                    color: colors.textSecondary, 
                    textDecoration: 'none'
                  }}
                >
                  –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç
                </Link>
                <Link 
                  to="/business-application" 
                  style={{ 
                    color: colors.textSecondary, 
                    textDecoration: 'none'
                  }}
                >
                  –î–ª—è –±—ñ–∑–Ω–µ—Å—É
                </Link>
              </Box>
            </Grid>
          </Grid>
          
          <Box sx={{ 
            textAlign: 'center', 
            mt: 4, 
            pt: 4, 
            borderTop: `1px solid ${colors.borderPrimary}` 
          }}>
            <Typography variant="body2" sx={{ color: colors.textSecondary }}>
              ¬© 2025 –¢–≤–æ—è –®–∏–Ω–∞. –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω—ñ.
            </Typography>
          </Box>
        </Container>
      </Box>

      {/* QR Dialog —É–¥–∞–ª–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ */}
    </>
  );
};

export default ClientFooter; 