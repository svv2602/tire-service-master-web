import React, { useEffect, useState } from 'react';
import { getProfileActions } from '../ui/AppBar/profileActions';
import { Box, useMediaQuery } from '@mui/material';
import { useTheme } from '@mui/material/styles';
import { getThemeColors, getButtonStyles } from '../../styles';
import { AppBar as CustomAppBar } from '../ui/AppBar/AppBar';
import ThemeToggle from '../ui/ThemeToggle';
import { LanguageSelector } from '../LanguageSelector';
import { useTranslation } from 'react-i18next';
import { useNavigate, Link } from 'react-router-dom';
import { useSelector, useDispatch } from 'react-redux';
import { RootState, AppDispatch } from '../../store';
import { logoutUser } from '../../store/slices/authSlice';
import { useScrollToTopOnRouteChange } from '../../hooks/useScrollToTop';
import { UserRole } from '../../types';
import {
  Article as ArticleIcon,
  Build as BuildIcon,
  BookOnline as BookOnlineIcon,
  Login as LoginIcon,
  Person as PersonIcon,
  RateReview as ReviewIcon,
  AdminPanelSettings as AdminIcon,
  Logout as LogoutIcon,
  Calculate as CalculateIcon,
  Search as SearchIcon,
  LocalOffer as LocalOfferIcon,
  GetApp as InstallIcon
} from '@mui/icons-material';
import { Button, ListItemIcon, ListItemText, MenuItem, Divider } from '@mui/material';
import ClientFooter from './ClientFooter';
import CartIndicator from './CartIndicator';
import { usePWAInstall } from '../../hooks/usePWAInstall';

interface ClientLayoutProps {
  children: React.ReactNode;
}

const ClientLayout: React.FC<ClientLayoutProps> = ({ children }) => {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('lg')); // –ò–∑–º–µ–Ω–µ–Ω–æ —Å 'md' –Ω–∞ 'lg' –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –ø–ª–∞–Ω—à–µ—Ç–æ–≤
  const colors = getThemeColors(theme);
  const buttonStyles = getButtonStyles(theme, 'secondary');
  const navigate = useNavigate();
  const dispatch = useDispatch<AppDispatch>();
  const { user, isAuthenticated } = useSelector((state: RootState) => state.auth);
  const isAdmin = user?.role === UserRole.ADMIN || user?.role === UserRole.MANAGER;
  const { t } = useTranslation();
  const { isInstallable, isInstalled, showInstallPrompt } = usePWAInstall();

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –≤–µ—Ä—Ö—É –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ (—Ç–æ–ª—å–∫–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö)
  useScrollToTopOnRouteChange({
    behavior: 'smooth',
    delay: 100,
    mobileOnly: true,
    mobileBreakpoint: 768
  });

  const profileActions = getProfileActions({
    user,
    isAuthenticated: !!user,
    navigate,
    isAdminPanel: false,
    onLogout: async () => {
      await dispatch(logoutUser());
      navigate('/client');
    },
    t: t as any, // –í—Ä–µ–º–µ–Ω–Ω—ã–π workaround –¥–ª—è —Ç–∏–ø–æ–≤
  });

  // –ü—É–±–ª–∏—á–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è AppBar
  // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
  const publicLinks = (
    <Box sx={{ display: { xs: 'none', lg: 'flex' }, gap: 2, alignItems: 'center' }}>
      <Button
        color="inherit"
        component={Link}
        to="/knowledge-base"
        sx={{ color: colors.textSecondary }}
        startIcon={<ArticleIcon />}
      >
        {t('navigation.knowledgeBase')}
      </Button>
      <Button
        color="inherit"
        component={Link}
        to="/client/services"
        sx={{ color: colors.textSecondary }}
        startIcon={<BuildIcon />}
      >
        {t('navigation.services')}
      </Button>
      <Button
        color="inherit"
        component={Link}
        to="/client/booking"
        sx={{ color: colors.textSecondary }}
        startIcon={<BookOnlineIcon />}
      >
        {t('navigation.booking')}
      </Button>
      <Button
        color="inherit"
        component={Link}
        to="/client/tire-calculator"
        sx={{ color: colors.textSecondary }}
        startIcon={<CalculateIcon />}
      >
        {t('navigation.tireCalculator')}
      </Button>
      <Button
        color="inherit"
        component={Link}
        to="/client/tire-search"
        sx={{ color: colors.textSecondary }}
        startIcon={<SearchIcon />}
      >
        {t('navigation.tireSearch')}
      </Button>
      <Button
        color="inherit"
        component={Link}
        to="/client/tire-offers"
        sx={{ color: colors.textSecondary }}
        startIcon={<LocalOfferIcon />}
      >
        –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —à–∏–Ω
      </Button>
    </Box>
  );

  // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
  const navigationActions = [
    {
      label: t('navigation.knowledgeBase'),
      icon: ArticleIcon,
      onClick: () => navigate('/knowledge-base')
    },
    {
      label: t('navigation.services'),
      icon: BuildIcon,
      onClick: () => navigate('/client/services')
    },
    {
      label: t('navigation.booking'),
      icon: BookOnlineIcon,
      onClick: () => navigate('/client/booking')
    },
    {
      label: t('navigation.tireCalculator'),
      icon: CalculateIcon,
      onClick: () => navigate('/client/tire-calculator')
    },
    {
      label: t('navigation.tireSearch'),
      icon: SearchIcon,
      onClick: () => navigate('/client/tire-search')
    },
    {
      label: '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —à–∏–Ω',
      icon: LocalOfferIcon,
      onClick: () => navigate('/client/tire-offers')
    },
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
    ...(isInstallable && !isInstalled ? [{
      label: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
      icon: InstallIcon,
      onClick: showInstallPrompt
    }] : [])
  ];

  return (
    <Box sx={{ 
      minHeight: '100vh', 
      bgcolor: colors.backgroundPrimary,
      display: 'flex',
      flexDirection: 'column'
    }}>
      <CustomAppBar
        title="üöó –¢–≤–æ—è –®–∏–Ω–∞"
        onTitleClick={() => navigate('/client')}
        rightContent={
          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
            {publicLinks}
            {/* –ö–æ—Ä–∑–∏–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ - –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —á–µ—Ä–µ–∑ mobileCartContent */}
            {!isMobile && <CartIndicator />}
            <ThemeToggle />
            <LanguageSelector />
          </Box>
        }
        mobileCartContent={<CartIndicator />}
        profileActions={profileActions}
        navigationActions={navigationActions}
        username={user ? `${user.first_name} ${user.last_name}` : ''}
      />
      <Box 
        component="main" 
        sx={{ 
          pt: { xs: 7, sm: 8 }, // –û—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É –¥–ª—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
          pb: 8, // ‚úÖ –£–í–ï–õ–ò–ß–ï–ù–û: –û—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É –ø–µ—Ä–µ–¥ —Ñ—É—Ç–µ—Ä–æ–º (64px)
          flex: 1, // –ó–∞–Ω–∏–º–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –º–µ—Å—Ç–æ
          display: 'flex',
          flexDirection: 'column'
        }}
      >
        {children}
      </Box>
      <ClientFooter />
    </Box>
  );
};

export default ClientLayout;
