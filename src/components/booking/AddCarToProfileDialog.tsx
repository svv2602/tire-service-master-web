import React, { useState } from 'react';
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
  Box,
  CircularProgress,
  Alert,
  Divider,
  Card,
  CardContent,
  Chip,
} from '@mui/material';
import {
  DirectionsCar as CarIcon,
  Add as AddIcon,
  Close as CloseIcon,
} from '@mui/icons-material';
import { useCreateMyClientCarMutation, useCreateClientCarMutation } from '../../api/clients.api';
import { useGetCarBrandsQuery } from '../../api/carBrands.api';
import { useGetCarModelsByBrandIdQuery } from '../../api/carModels.api';
import { useGetCarTypesQuery } from '../../api/carTypes.api';
import { useSelector, useDispatch } from 'react-redux';
import { selectCurrentUser } from '../../store/slices/authSlice';
import { ClientCarFormData } from '../../types/client';
import { UserRole } from '../../types/user-role';
import { useInvalidateCache } from '../../api/baseApi';
import { useTranslation } from 'react-i18next';

interface AddCarToProfileDialogProps {
  open: boolean;
  onClose: () => void;
  carData: {
    license_plate: string;
    car_brand?: string;
    car_model?: string;
    car_type_id?: number;
  };
  onCarAdded?: (car: any) => void;
}

export const AddCarToProfileDialog: React.FC<AddCarToProfileDialogProps> = ({
  open,
  onClose,
  carData,
  onCarAdded,
}) => {
  const { t } = useTranslation();
  const [isAdding, setIsAdding] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState(false);

  // API —Ö—É–∫–∏
  const [createMyClientCar] = useCreateMyClientCarMutation();
  const [createClientCar] = useCreateClientCarMutation();
  const { data: carBrandsData } = useGetCarBrandsQuery({});
  const { data: carTypesData } = useGetCarTypesQuery({});
  const invalidateCache = useInvalidateCache();

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Redux
  const currentUser = useSelector(selectCurrentUser);

  // –ù–∞—Ö–æ–¥–∏–º –±—Ä–µ–Ω–¥ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –µ–≥–æ ID
  const foundBrand = carData.car_brand && carBrandsData?.data ? 
    carBrandsData.data.find(brand => 
      brand.name.toLowerCase() === carData.car_brand!.toLowerCase()
    ) : null;

  // –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–µ–ª–∏ –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –±—Ä–µ–Ω–¥–∞
  const { data: carModelsData } = useGetCarModelsByBrandIdQuery(
    foundBrand ? { brandId: foundBrand.id.toString() } : { brandId: '0' },
    { skip: !foundBrand }
  );

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ carData –ø–µ—Ä–µ–¥–∞–Ω
  if (!carData) {
    return null;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  if (!carData.license_plate || !carData.license_plate.trim()) {
    return null;
  }

  const handleAddCar = async () => {
    try {
      setIsAdding(true);
      setError(null);

      console.log('üîç –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', currentUser);
      console.log('üîç –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser?.role);
      console.log('üîç Client ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser?.client_id);

      // –ò—â–µ–º –±—Ä–µ–Ω–¥ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
      let brandId: number;
      if (foundBrand) {
        brandId = foundBrand.id;
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω –±—Ä–µ–Ω–¥:', foundBrand.name, 'ID:', brandId);
      } else {
        // –ï—Å–ª–∏ –±—Ä–µ–Ω–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π
        if (carBrandsData?.data && carBrandsData.data.length > 0) {
          brandId = carBrandsData.data[0].id;
          console.log('‚ö†Ô∏è –ë—Ä–µ–Ω–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π:', carBrandsData.data[0].name, 'ID:', brandId);
        } else {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±—Ä–µ–Ω–¥—ã –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π');
        }
      }

      // –ò—â–µ–º –º–æ–¥–µ–ª—å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≤ –Ω–∞–π–¥–µ–Ω–Ω–æ–º –±—Ä–µ–Ω–¥–µ
      let modelId: number;
      if (carData.car_model && carModelsData?.car_models) {
        const foundModel = carModelsData.car_models.find(model => 
          model.name.toLowerCase() === carData.car_model!.toLowerCase()
        );
        if (foundModel) {
          modelId = foundModel.id;
          console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –º–æ–¥–µ–ª—å:', foundModel.name, 'ID:', modelId);
        } else {
          // –ï—Å–ª–∏ –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –±—Ä–µ–Ω–¥–∞
          if (carModelsData.car_models.length > 0) {
            modelId = carModelsData.car_models[0].id;
            console.log('‚ö†Ô∏è –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –¥–ª—è –±—Ä–µ–Ω–¥–∞:', carModelsData.car_models[0].name, 'ID:', modelId);
          } else {
            throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–æ–¥–µ–ª–∏ –¥–ª—è –±—Ä–µ–Ω–¥–∞ ${foundBrand?.name || '–≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –±—Ä–µ–Ω–¥–∞'}`);
          }
        }
      } else {
        // –ï—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –¥–ª—è –±—Ä–µ–Ω–¥–∞
        if (carModelsData?.car_models && carModelsData.car_models.length > 0) {
          modelId = carModelsData.car_models[0].id;
          console.log('‚ÑπÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é:', carModelsData.car_models[0].name, 'ID:', modelId);
        } else {
          throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–æ–¥–µ–ª–∏ –¥–ª—è –±—Ä–µ–Ω–¥–∞ ${foundBrand?.name || '–≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –±—Ä–µ–Ω–¥–∞'}`);
        }
      }

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è
      const carFormData: ClientCarFormData = {
        brand_id: brandId,
        model_id: modelId,
        year: new Date().getFullYear(), // –¢–µ–∫—É—â–∏–π –≥–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        license_plate: carData.license_plate,
        car_type_id: carData.car_type_id || undefined,
        is_primary: false, // –ù–µ –¥–µ–ª–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      };

      console.log('üöó –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –ø—Ä–æ—Ñ–∏–ª—å:', carFormData);

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π API –∑–∞–ø—Ä–æ—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      let result;
      
      if (currentUser?.role === UserRole.CLIENT) {
        // –î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º auth/me/cars (–¥–∞–Ω–Ω—ã–µ —É–∂–µ –æ–±–µ—Ä–Ω—É—Ç—ã –≤ { car: data } –≤ API)
        console.log('üöó –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —á–µ—Ä–µ–∑ auth/me/cars (–∫–ª–∏–µ–Ω—Ç)');
        result = await createMyClientCar(carFormData).unwrap();
      } else {
        // –î–ª—è –¥—Ä—É–≥–∏—Ö —Ä–æ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–π API
        // –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Ä–æ–ª–µ–π –Ω—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –∫–ª–∏–µ–Ω—Ç–∞
        let clientId = currentUser?.client_id;
        
        // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç client_id, –∏—Å–ø–æ–ª—å–∑—É–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (!clientId && currentUser?.id) {
          // –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∑–¥–∞—é—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π ID –∫–∞–∫ client_id
          // –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–µ–±—è
          clientId = currentUser.id;
        }
        
        if (!clientId) {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è');
        }
        
        console.log('üöó –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —á–µ—Ä–µ–∑ –æ–±—â–∏–π API (–∞–¥–º–∏–Ω/–ø–∞—Ä—Ç–Ω–µ—Ä/–º–µ–Ω–µ–¥–∂–µ—Ä), clientId:', clientId);
        result = await createClientCar({
          clientId: clientId.toString(),
          data: { car: carFormData } // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ { car: data }
        }).unwrap();
      }
      
      console.log('‚úÖ –ê–≤—Ç–æ–º–æ–±–∏–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω:', result);
      setSuccess(true);
      
      // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∫—ç—à –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
      invalidateCache.invalidateList(['ClientCars']);
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
      if (onCarAdded) {
        onCarAdded(result);
      }

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => {
        onClose();
        setSuccess(false);
      }, 2000);

    } catch (err: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è:', err);
      setError(err?.data?.error || err?.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è');
    } finally {
      setIsAdding(false);
    }
  };

  const handleClose = () => {
    if (!isAdding) {
      onClose();
      setError(null);
      setSuccess(false);
    }
  };

  // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
  const getCarTypeName = (carTypeId?: number) => {
    if (!carTypeId || !carTypesData) return '–ù–µ —É–∫–∞–∑–∞–Ω';
    const carType = carTypesData.find(type => type.id === carTypeId);
    return carType ? carType.name : '–ù–µ –Ω–∞–π–¥–µ–Ω';
  };

  return (
    <Dialog open={open} onClose={handleClose} maxWidth="sm" fullWidth>
      <DialogTitle sx={{ pb: 2 }}>
        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
          <CarIcon color="primary" />
          <Typography variant="h6">
            {t('bookingModals.addCarTitle')}
          </Typography>
        </Box>
      </DialogTitle>

      <DialogContent>
        {success ? (
          <Alert severity="success" sx={{ mb: 2 }}>
            <Typography variant="body1" sx={{ fontWeight: 'medium' }}>
              ‚úÖ –ê–≤—Ç–æ–º–æ–±–∏–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø—Ä–æ—Ñ–∏–ª—å!
            </Typography>
            <Typography variant="body2" sx={{ mt: 1 }}>
              –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –±—ã—Å—Ç—Ä–æ –≤—ã–±–∏—Ä–∞—Ç—å —ç—Ç–æ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.
            </Typography>
          </Alert>
        ) : (
          <>
            <Typography variant="body1" sx={{ mb: 2 }}>
              {t('bookingModals.addCarDescription')}
            </Typography>

            <Card sx={{ mb: 2 }}>
              <CardContent sx={{ pb: '16px !important' }}>
                <Typography variant="subtitle2" sx={{ mb: 2, color: 'text.secondary' }}>
                  {t('bookingModals.carData')}
                </Typography>
                
                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>
                  <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>
                    <Typography variant="body2" color="text.secondary">
                      {t('bookingModals.number')}:
                    </Typography>
                    <Typography variant="body2" sx={{ fontWeight: 'medium' }}>
                      {carData.license_plate}
                    </Typography>
                  </Box>
                  
                  {carData.car_brand && (
                    <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>
                      <Typography variant="body2" color="text.secondary">
                        {t('bookingModals.brand')}:
                      </Typography>
                      <Typography variant="body2" sx={{ fontWeight: 'medium' }}>
                        {carData.car_brand}
                      </Typography>
                    </Box>
                  )}
                  
                  {carData.car_model && (
                    <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>
                      <Typography variant="body2" color="text.secondary">
                        {t('bookingModals.model')}:
                      </Typography>
                      <Typography variant="body2" sx={{ fontWeight: 'medium' }}>
                        {carData.car_model}
                      </Typography>
                    </Box>
                  )}
                  
                  <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>
                    <Typography variant="body2" color="text.secondary">
                      {t('bookingModals.type')}:
                    </Typography>
                    <Typography variant="body2" sx={{ fontWeight: 'medium' }}>
                      {getCarTypeName(carData.car_type_id)}
                    </Typography>
                  </Box>
                </Box>
              </CardContent>
            </Card>

            <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
              {t('bookingModals.afterAdd')}
            </Typography>

            {error && (
              <Alert severity="error" sx={{ mb: 2 }}>
                {error}
              </Alert>
            )}
          </>
        )}
      </DialogContent>

      <DialogActions sx={{ p: 3, pt: 1 }}>
        {success ? (
          <Button onClick={handleClose} color="primary" variant="contained">
            –ó–∞–∫—Ä—ã—Ç—å
          </Button>
        ) : (
          <>
            <Button onClick={handleClose} disabled={isAdding}>
              {t('bookingModals.skip')}
            </Button>
            <Button
              onClick={handleAddCar}
              disabled={isAdding}
              variant="contained"
              startIcon={isAdding ? <CircularProgress size={20} /> : <AddIcon />}
            >
              {isAdding ? '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ...' : t('bookingModals.add')}
            </Button>
          </>
        )}
      </DialogActions>
    </Dialog>
  );
}; 