import axios, { InternalAxiosRequestConfig, AxiosResponse } from 'axios';
import config from '../config';
import { checkApiAvailability } from './baseQuery';
import { handleLogout, refreshTokens } from '../services/authService';

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const API_URL = `${config.API_URL}${config.API_PREFIX}`;

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä axios —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
export const apiClient = axios.create({
  baseURL: API_URL,
  headers: {
    'Content-Type': 'application/json',
  },
  timeout: 10000,
  withCredentials: true // –í–∫–ª—é—á–∞–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –∫—É–∫–∏ –¥–ª—è refresh —Ç–æ–∫–µ–Ω–∞
});

// Request interceptor - –¥–æ–±–∞–≤–ª—è–µ–º access —Ç–æ–∫–µ–Ω –∏–∑ Redux state
apiClient.interceptors.request.use((config: InternalAxiosRequestConfig) => {
  // –ü–æ–ª—É—á–∞–µ–º access —Ç–æ–∫–µ–Ω –∏–∑ Redux state
  const store = require('../store/store').store;
  const token = store.getState()?.auth?.accessToken;
  
  if (token && config.headers) {
    // –î–æ–±–∞–≤–ª—è–µ–º access —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization
    config.headers.Authorization = `Bearer ${token}`;
  }
  
  // –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  if (process.env.NODE_ENV === 'development') {
    console.log('üîê ApiClient –∑–∞–ø—Ä–æ—Å:', {
      url: config.url,
      hasAccessToken: !!token,
      tokenPreview: token ? `${token.substring(0, 20)}...` : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
      withCredentials: config.withCredentials
    });
  }

  return config;
});

// Response interceptor - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
apiClient.interceptors.response.use(
  (response: AxiosResponse) => {
    return response;
  },
  async (error) => {
    // üö´ –û–¢–ö–õ–Æ–ß–ï–ù–û: Interceptor –¥–ª—è 401 –æ—à–∏–±–æ–∫ –æ—Ç–∫–ª—é—á–µ–Ω, —Ç–∞–∫ –∫–∞–∫ RTK Query –≤ baseApi.ts —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —ç—Ç–æ
    // –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ refresh —Ç–æ–∫–µ–Ω–∞
    
    if (error.response?.status === 401) {
      console.log('‚ö†Ô∏è 401 –æ—à–∏–±–∫–∞ –≤ apiClient interceptor - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º, —Ç–∞–∫ –∫–∞–∫ RTK Query –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —ç—Ç–æ:', error.config?.url);
      
      // –î–ª—è auth –∑–∞–ø—Ä–æ—Å–æ–≤ –≤—Å–µ –µ—â–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
      if (error.config?.url?.includes('/auth/login') || error.config?.url?.includes('/auth/refresh')) {
        console.log('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
        handleLogout(require('../store/store').store.dispatch);
      }
    }
    
    return Promise.reject(error);
  }
);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
(async () => {
  try {
    const isAvailable = await checkApiAvailability();
    if (!isAvailable) {
      console.error(`API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: ${API_URL}`);
    }
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API: ${error}`);
  }
})();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export default apiClient;