#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ—à–∏–±–æ–∫ TypeScript –≤ –ø—Ä–æ–µ–∫—Ç–µ

const fs = require('fs');
const path = require('path');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ TypeScript...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞
function readFile(filePath) {
    try {
        return fs.readFileSync(filePath, 'utf8');
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ ${filePath}:`, error.message);
        return null;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞
function writeFile(filePath, content) {
    try {
        fs.writeFileSync(filePath, content, 'utf8');
        console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Ñ–∞–π–ª: ${filePath}`);
        return true;
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞ ${filePath}:`, error.message);
        return false;
    }
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è ServicePointsPage.tsx
function fixServicePointsPage() {
    const filePath = 'src/pages/service-points/ServicePointsPage.tsx';
    let content = readFile(filePath);
    if (!content) return;

    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å cities
    content = content.replace(
        /citiesData\?\.\w+\?\./g,
        'citiesData?.data?.'
    );

    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å regions
    content = content.replace(
        /regionsData\?\.\w+\?\./g,
        'regionsData?.data?.'
    );

    writeFile(filePath, content);
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è ServicesPage.tsx
function fixServicesPage() {
    const filePath = 'src/pages/services/ServicesPage.tsx';
    let content = readFile(filePath);
    if (!content) return;

    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å categoriesData
    content = content.replace(
        /categoriesData\?\.\w+\?\./g,
        'categoriesData?.'
    );

    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å servicesData
    content = content.replace(
        /servicesData\?\.\w+\?\./g,
        'servicesData?.'
    );

    writeFile(filePath, content);
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è ServicePointFormPage.tsx
function fixServicePointFormPage() {
    const filePath = 'src/pages/service-points/ServicePointFormPage.tsx';
    let content = readFile(filePath);
    if (!content) return;

    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å useGetPartnersQuery
    content = content.replace(
        'useGetPartnersQuery()',
        'useGetPartnersQuery({})'
    );

    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å useGetRegionsQuery
    content = content.replace(
        'useGetRegionsQuery()',
        'useGetRegionsQuery({})'
    );

    writeFile(filePath, content);
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è ServicePointDetailsPage.tsx
function fixServicePointDetailsPage() {
    const filePath = 'src/pages/service-points/ServicePointDetailsPage.tsx';
    let content = readFile(filePath);
    if (!content) return;

    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å regionId
    content = content.replace(
        /city\?\.\w*regionId\w*/g,
        'city?.region_id'
    );

    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å working_hours
    content = content.replace(
        /servicePoint\.working_hours/g,
        '(servicePoint as any).working_hours'
    );

    writeFile(filePath, content);
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è CitiesPage.tsx
function fixCitiesPage() {
    const filePath = 'src/pages/cities/CitiesPage.tsx';
    let content = readFile(filePath);
    if (!content) return;

    // –î–æ–±–∞–≤–ª—è–µ–º CityFilter –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!content.includes('CityFilter')) {
        content = content.replace(
            "import { City, CityFilter, CityFormData, Region, ApiResponse } from '../../types/models';",
            "import { City, CityFormData, Region, ApiResponse } from '../../types/models';\n\ninterface CityFilter {\n  query?: string;\n  region_id?: string | number;\n  page?: number;\n  per_page?: number;\n}"
        );
    }

    writeFile(filePath, content);
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è RegionsPage.tsx
function fixRegionsPage() {
    const filePath = 'src/pages/catalog/RegionsPage.tsx';
    let content = readFile(filePath);
    if (!content) return;

    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å is_active
    content = content.replace(
        'is_active: region.is_active,',
        'is_active: region.is_active ?? true,'
    );

    writeFile(filePath, content);
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ TypeScript...');

    fixServicePointsPage();
    fixServicesPage();
    fixServicePointFormPage();
    fixServicePointDetailsPage();
    fixCitiesPage();
    fixRegionsPage();

    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üìù –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å npm run build –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
main(); 