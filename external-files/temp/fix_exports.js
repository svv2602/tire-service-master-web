// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–∫—Å–ø–æ—Ä—Ç–æ–≤ –≤ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
// –ê–≤—Ç–æ—Ä: AI Assistant

const fs = require('fs');
const path = require('path');

const basePath = '/home/snisar/mobi_tz/tire-service-master-web/src/pages';

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
const filesToFix = [
  { path: 'service-points/ServicePointsPage.tsx', oldExport: 'ServicePointsPageNew', newExport: 'ServicePointsPage' },
  { path: 'reviews/ReviewsPage.tsx', oldExport: 'ReviewsPageNew', newExport: 'ReviewsPage' },
  { path: 'bookings/BookingsPage.tsx', oldExport: 'BookingsPageNew', newExport: 'BookingsPage' },
  { path: 'car-brands/CarBrandsPage.tsx', oldExport: 'CarBrandsPageNew', newExport: 'CarBrandsPage' },
  { path: 'catalog/CitiesPage.tsx', oldExport: 'CitiesPageNew', newExport: 'CitiesPage' },
  { path: 'catalog/RegionsPage.tsx', oldExport: 'RegionsPageNew', newExport: 'RegionsPage' },
  { path: 'regions/RegionsPage.tsx', oldExport: 'RegionsPageNew', newExport: 'RegionsPage' }
];

filesToFix.forEach(file => {
  const filePath = path.join(basePath, file.path);
  
  if (fs.existsSync(filePath)) {
    let content = fs.readFileSync(filePath, 'utf8');
    
    // –ó–∞–º–µ–Ω—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    content = content.replace(
      new RegExp(`const ${file.oldExport}`, 'g'),
      `const ${file.newExport}`
    );
    
    // –ó–∞–º–µ–Ω—è–µ–º export
    content = content.replace(
      new RegExp(`export default ${file.oldExport}`, 'g'),
      `export default ${file.newExport}`
    );
    
    // –ó–∞–º–µ–Ω—è–µ–º –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π export –µ—Å–ª–∏ –µ—Å—Ç—å
    content = content.replace(
      new RegExp(`export const ${file.oldExport}`, 'g'),
      `export const ${file.newExport}`
    );
    
    fs.writeFileSync(filePath, content);
    console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω ${file.path}: ${file.oldExport} ‚Üí ${file.newExport}`);
  } else {
    console.log(`‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${file.path}`);
  }
});

console.log('üéâ –í—Å–µ —ç–∫—Å–ø–æ—Ä—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!'); 