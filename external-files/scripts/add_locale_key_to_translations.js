#!/usr/bin/env node
// –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞ locale –≤ —Ñ–∞–π–ª—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤

const fs = require('fs');
const path = require('path');

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const ruFilePath = path.join(__dirname, '../../src/i18n/locales/ru.json');
const ukFilePath = path.join(__dirname, '../../src/i18n/locales/uk.json');

function addLocaleKey(filePath, locale) {
  console.log(`\nüîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ locale –≤ ${locale.toUpperCase()} —Ñ–∞–π–ª–µ...`);
  
  try {
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    const content = fs.readFileSync(filePath, 'utf8');
    const data = JSON.parse(content);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á locale
    data.locale = locale;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    fs.writeFileSync(filePath, JSON.stringify(data, null, 2), 'utf8');
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∫–ª—é—á locale: "${locale}" –≤ ${locale} —Ñ–∞–π–ª`);
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${locale} —Ñ–∞–π–ª–∞:`, error.message);
  }
}

function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π locale...');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á locale –≤ —Ä—É—Å—Å–∫–∏–π —Ñ–∞–π–ª
  addLocaleKey(ruFilePath, 'ru');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á locale –≤ —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π —Ñ–∞–π–ª
  addLocaleKey(ukFilePath, 'uk');
  
  console.log('\n‚ú® –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π locale –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('\nüìù –ß—Ç–æ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ:');
  console.log('1. –ö–ª—é—á "locale": "ru" –≤ ru.json');
  console.log('2. –ö–ª—é—á "locale": "uk" –≤ uk.json');
  
  console.log('\nüß™ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å t("locale") –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞–ª–∏');
}

main(); 