const fs = require('fs');
const path = require('path');

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ–∫—Ü–∏–∏ servicePointCard –≤ —Ñ–∞–π–ª–µ ru.json
const fixServicePointCardDuplication = () => {
  const filePath = path.join(__dirname, '../../src/i18n/locales/components/ru.json');
  
  try {
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    const content = fs.readFileSync(filePath, 'utf8');
    const data = JSON.parse(content);
    
    console.log('üîç –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–∞ ru.json...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
    let hasClientSearchPageCard = false;
    let hasGlobalCard = false;
    
    if (data.clientSearchPage && data.clientSearchPage.servicePointCard) {
      hasClientSearchPageCard = true;
      console.log('‚ùå –ù–∞–π–¥–µ–Ω–∞ —Å–µ–∫—Ü–∏—è servicePointCard –≤ clientSearchPage');
    }
    
    if (data.servicePointCard) {
      hasGlobalCard = true;
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Å–µ–∫—Ü–∏—è servicePointCard');
    }
    
    if (hasClientSearchPageCard && hasGlobalCard) {
      console.log('üö® –û–ë–ù–ê–†–£–ñ–ï–ù–û –î–£–ë–õ–ò–†–û–í–ê–ù–ò–ï!');
      
      // –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
      const backupPath = filePath + '.backup.' + Date.now();
      fs.writeFileSync(backupPath, content);
      console.log(`üì¶ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: ${backupPath}`);
      
      // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â—É—é —Å–µ–∫—Ü–∏—é –∏–∑ clientSearchPage
      delete data.clientSearchPage.servicePointCard;
      console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ —Å–µ–∫—Ü–∏—è servicePointCard –∏–∑ clientSearchPage');
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
      const newContent = JSON.stringify(data, null, 2);
      fs.writeFileSync(filePath, newContent);
      
      console.log('‚úÖ –§–∞–π–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      console.log('üìä –ò–∑–º–µ–Ω–µ–Ω–∏—è:');
      console.log('   - –£–¥–∞–ª–µ–Ω–∞ –¥—É–±–ª–∏—Ä—É—é—â–∞—è —Å–µ–∫—Ü–∏—è servicePointCard –∏–∑ clientSearchPage');
      console.log('   - –û—Å—Ç–∞–≤–ª–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Å–µ–∫—Ü–∏—è servicePointCard');
      
      return true;
    } else {
      console.log('‚ÑπÔ∏è –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–∞ –∏–∑ —Å–µ–∫—Ü–∏–π');
      return false;
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞:', error.message);
    return false;
  }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å
const checkUkrainianFile = () => {
  const filePath = path.join(__dirname, '../../src/i18n/locales/components/uk.json');
  
  try {
    const content = fs.readFileSync(filePath, 'utf8');
    const data = JSON.parse(content);
    
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞...');
    
    let hasClientSearchPageCard = false;
    let hasGlobalCard = false;
    
    if (data.clientSearchPage && data.clientSearchPage.servicePointCard) {
      hasClientSearchPageCard = true;
      console.log('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–∞ —Å–µ–∫—Ü–∏—è servicePointCard –≤ clientSearchPage (UK)');
    }
    
    if (data.servicePointCard) {
      hasGlobalCard = true;
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Å–µ–∫—Ü–∏—è servicePointCard (UK)');
    }
    
    if (hasClientSearchPageCard && !hasGlobalCard) {
      console.log('üö® –í —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º —Ñ–∞–π–ª–µ servicePointCard —Ç–æ–ª—å–∫–æ –≤ clientSearchPage!');
      console.log('üìù –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å–µ–∫—Ü–∏—é servicePointCard');
    } else if (!hasClientSearchPageCard && hasGlobalCard) {
      console.log('‚úÖ –£–∫—Ä–∞–∏–Ω—Å–∫–∏–π —Ñ–∞–π–ª –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞:', error.message);
  }
};

// –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
console.log('üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è servicePointCard...\n');

const fixed = fixServicePointCardDuplication();
checkUkrainianFile();

if (fixed) {
  console.log('\n‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û!');
  console.log('üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:');
  console.log('   1. –£–¥–∞–ª–µ–Ω–∞ –¥—É–±–ª–∏—Ä—É—é—â–∞—è —Å–µ–∫—Ü–∏—è servicePointCard –∏–∑ clientSearchPage');
  console.log('   2. –û—Å—Ç–∞–≤–ª–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Å–µ–∫—Ü–∏—è servicePointCard —Å –ø–æ–ª–Ω—ã–º–∏ –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏');
  console.log('   3. –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞');
  console.log('\n‚ö° –¢–µ–ø–µ—Ä—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ServicePointCard –¥–æ–ª–∂–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥—ã!');
} else {
  console.log('\n‚ùå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
} 