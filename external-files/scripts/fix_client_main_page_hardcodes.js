#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ö–∞—Ä–¥–∫–æ–¥–æ–≤ –≤ ClientMainPage.tsx
 * –ó–∞–º–µ–Ω—è–µ—Ç –≤—Å–µ —É–∫—Ä–∞–∏–Ω—Å–∫–∏–µ —Ö–∞—Ä–¥–∫–æ–¥—ã –Ω–∞ –∫–ª—é—á–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ t()
 */

const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É ClientMainPage.tsx
const clientMainPagePath = path.join(__dirname, '../../src/pages/client/ClientMainPage.tsx');

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è ClientMainPage.tsx
const fixes = [
  // –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
  {
    old: "title: '–ó–Ω–∞–π–¥—ñ—Ç—å –Ω–∞–π–∫—Ä–∞—â–∏–π –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –ø–æ—Ä—É—á –∑ –≤–∞–º–∏',",
    new: "title: t('client.mainPage.heroTitle'),"
  },
  
  // –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –¥–ª—è –≥–æ—Ä–æ–¥–∞
  {
    old: "label={currentHero.settings?.city_placeholder || '–û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ç–æ'}",
    new: "label={currentHero.settings?.city_placeholder || t('client.mainPage.selectCity')}"
  },
  
  // –¢–µ–∫—Å—Ç –∫–æ–≥–¥–∞ –≥–æ—Ä–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
  {
    old: 'noOptionsText="–ì–æ—Ä–æ–¥–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ"',
    new: 'noOptionsText={t("client.mainPage.noCitiesFound")}'
  },
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π
  {
    old: 'üìö –ö–æ—Ä–∏—Å–Ω—ñ —Å—Ç–∞—Ç—Ç—ñ',
    new: `üìö ${t('client.mainPage.articlesTitle')}`
  },
  
  // –ê–≤—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  {
    old: "'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä'",
    new: "t('client.mainPage.unknownAuthor')"
  },
  
  // –ú–∏–Ω—É—Ç—ã –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è
  {
    old: 'label={`${article.reading_time || 5} –º–∏–Ω`}',
    new: 'label={`${article.reading_time || 5} ${t("client.mainPage.minutes")}`}'
  },
  
  // –ö–Ω–æ–ø–∫–∞ "–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ"
  {
    old: '–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ',
    new: '{t("client.mainPage.readMore")}'
  },
  
  // –ö–Ω–æ–ø–∫–∞ "–í—Å–µ —Å—Ç–∞—Ç—å–∏"
  {
    old: '–í—Å—ñ —Å—Ç–∞—Ç—Ç—ñ',
    new: '{t("client.mainPage.allArticles")}'
  },
  
  // –û–ø–∏—Å–∞–Ω–∏–µ –≤ —Ñ—É—Ç–µ—Ä–µ
  {
    old: "'–ó–Ω–∞–π–¥—ñ—Ç—å –Ω–∞–π–∫—Ä–∞—â–∏–π –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å –ø–æ—Ä—É—á –∑ –≤–∞–º–∏. –®–≤–∏–¥–∫–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è, –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ –º–∞–π—Å—Ç—Ä–∏.'",
    new: "t('client.mainPage.footerDescription')"
  },
  
  // –£—Å–ª—É–≥–∏ –≤ —Ñ—É—Ç–µ—Ä–µ
  {
    old: "['–ó–∞–º—ñ–Ω–∞ —à–∏–Ω', '–ë–∞–ª–∞–Ω—Å—É–≤–∞–Ω–Ω—è', '–†–µ–º–æ–Ω—Ç –ø—Ä–æ–∫–æ–ª—ñ–≤']",
    new: "[t('client.mainPage.services.tireChange'), t('client.mainPage.services.balancing'), t('client.mainPage.services.repair')]"
  },
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
  {
    old: '–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è',
    new: '{t("client.mainPage.information")}'
  },
  
  // –°—Å—ã–ª–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ—É—Ç–µ—Ä–µ
  {
    old: "['–ë–∞–∑–∞ –∑–Ω–∞–Ω—å', t('client.mainPage.personalCabinetButton'), '–î–ª—è –±—ñ–∑–Ω–µ—Å—É']",
    new: "[t('client.mainPage.knowledgeBase'), t('client.mainPage.personalCabinetButton'), t('client.mainPage.forBusiness')]"
  },
  
  // –ö–æ–ø–∏—Ä–∞–π—Ç
  {
    old: "'¬© 2024 –¢–≤–æ—è –®–∏–Ω–∞. –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω—ñ.'",
    new: "t('client.mainPage.copyright')"
  }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
function applyFixes() {
  try {
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    let content = fs.readFileSync(clientMainPagePath, 'utf8');
    
    console.log('üîß –ü—Ä–∏–º–µ–Ω—è—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫ ClientMainPage.tsx...');
    
    let fixedCount = 0;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–∞–∂–¥–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    fixes.forEach((fix, index) => {
      if (content.includes(fix.old)) {
        content = content.replace(fix.old, fix.new);
        fixedCount++;
        console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ${index + 1}: ${fix.old.substring(0, 50)}...`);
      } else {
        console.log(`‚ö†Ô∏è  –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ${index + 1} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: ${fix.old.substring(0, 50)}...`);
      }
    });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    fs.writeFileSync(clientMainPagePath, content, 'utf8');
    
    console.log(`\nüéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ! –ü—Ä–∏–º–µ–Ω–µ–Ω–æ ${fixedCount} –∏–∑ ${fixes.length} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.`);
    
    return { success: true, fixedCount, totalFixes: fixes.length };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:', error.message);
    return { success: false, error: error.message };
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
if (require.main === module) {
  const result = applyFixes();
  process.exit(result.success ? 0 : 1);
}

module.exports = { applyFixes }; 