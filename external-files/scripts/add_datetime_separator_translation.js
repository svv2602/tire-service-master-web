#!/usr/bin/env node
// –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ ReviewStep

const fs = require('fs');
const path = require('path');

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const ruFilePath = path.join(__dirname, '../../src/i18n/locales/ru.json');
const ukFilePath = path.join(__dirname, '../../src/i18n/locales/uk.json');

// –ù–æ–≤—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
const dateTimeSeparatorTranslations = {
  ru: {
    "dateTimeSeparator": "–≤"
  },
  uk: {
    "dateTimeSeparator": "–æ"
  }
};

function addDateTimeSeparatorTranslation(filePath, lang) {
  console.log(`\nüîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ ${lang.toUpperCase()} —Ñ–∞–π–ª–µ...`);
  
  try {
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    const content = fs.readFileSync(filePath, 'utf8');
    const data = JSON.parse(content);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ–∫—Ü–∏–∏ bookingSteps.review
    if (!data.bookingSteps || !data.bookingSteps.review) {
      console.log(`‚ùå –°–µ–∫—Ü–∏—è bookingSteps.review –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ ${lang} —Ñ–∞–π–ª–µ`);
      return data;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥
    data.bookingSteps.review = {
      ...data.bookingSteps.review,
      ...dateTimeSeparatorTranslations[lang]
    };
    
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø–µ—Ä–µ–≤–æ–¥ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –≤ ${lang} —Ñ–∞–π–ª–µ: "${dateTimeSeparatorTranslations[lang].dateTimeSeparator}"`);
    
    return data;
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${lang} —Ñ–∞–π–ª–∞:`, error.message);
    throw error;
  }
}

function main() {
  console.log('üéØ –î–û–ë–ê–í–õ–ï–ù–ò–ï –ü–ï–†–ï–í–û–î–ê –†–ê–ó–î–ï–õ–ò–¢–ï–õ–Ø –î–ê–¢–´ –ò –í–†–ï–ú–ï–ù–ò');
  console.log('================================================');
  
  try {
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –≤ —Ä—É—Å—Å–∫–∏–π —Ñ–∞–π–ª
    const ruData = addDateTimeSeparatorTranslation(ruFilePath, 'ru');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –≤ —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π —Ñ–∞–π–ª  
    const ukData = addDateTimeSeparatorTranslation(ukFilePath, 'uk');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    fs.writeFileSync(ruFilePath, JSON.stringify(ruData, null, 2), 'utf8');
    fs.writeFileSync(ukFilePath, JSON.stringify(ukData, null, 2), 'utf8');
    
    console.log('\nüéâ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û!');
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–≤–æ–¥—ã —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏');
    console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log(`- –†—É—Å—Å–∫–∏–π: "${dateTimeSeparatorTranslations.ru.dateTimeSeparator}"`);
    console.log(`- –£–∫—Ä–∞–∏–Ω—Å–∫–∏–π: "${dateTimeSeparatorTranslations.uk.dateTimeSeparator}"`);
    
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê:', error.message);
    process.exit(1);
  }
}

if (require.main === module) {
  main();
}

module.exports = { addDateTimeSeparatorTranslation, dateTimeSeparatorTranslations }; 