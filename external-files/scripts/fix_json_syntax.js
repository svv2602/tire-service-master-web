#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ JSON —Ñ–∞–π–ª–∞—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤
 */

const fs = require('fs');
const path = require('path');

const UK_JSON_PATH = 'src/i18n/locales/uk.json';
const RU_JSON_PATH = 'src/i18n/locales/ru.json';

/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ JSON —Ñ–∞–π–ª–µ
 */
function fixJsonSyntax(filePath) {
  console.log(`üîß –ò—Å–ø—Ä–∞–≤–ª—è—é —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –≤ ${filePath}...`);
  
  try {
    let content = fs.readFileSync(filePath, 'utf8');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
    content = content
      // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –∑–∞–ø—è—Ç—ã–µ
      .replace(/,\s*,/g, ',')
      // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—è—Ç—ã–µ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º–∏ —Å–∫–æ–±–∫–∞–º–∏
      .replace(/,(\s*[}\]])/g, '$1')
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–ø—è—Ç—ã–µ –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏
      .replace(/}\s*{/g, '},{')
      // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
      .replace(/}\s*},\s*"/g, '}\n  },\n  "');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
    JSON.parse(content);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(filePath, content, 'utf8');
    console.log(`‚úÖ ${filePath} —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω`);
    
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ ${filePath}:`, error.message);
    return false;
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ JSON —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–æ–≤...\n');
  
  const results = [
    fixJsonSyntax(UK_JSON_PATH),
    fixJsonSyntax(RU_JSON_PATH)
  ];
  
  const successCount = results.filter(Boolean).length;
  
  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${successCount}/${results.length} —Ñ–∞–π–ª–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ`);
  
  if (successCount === results.length) {
    console.log('üéâ –í—Å–µ JSON —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
  } else {
    console.log('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã —Ç—Ä–µ–±—É—é—Ç —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
    process.exit(1);
  }
}

if (require.main === module) {
  main();
}

module.exports = { fixJsonSyntax }; 