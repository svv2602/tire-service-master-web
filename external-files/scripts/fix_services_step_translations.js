#!/usr/bin/env node
// –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ ServicesStep

const fs = require('fs');
const path = require('path');

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const ruFilePath = path.join(__dirname, '../../src/i18n/locales/ru.json');
const ukFilePath = path.join(__dirname, '../../src/i18n/locales/uk.json');

// –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è ServicesStep
const missingTranslations = {
  ru: {
    "servicesAndComments": "–í—ã–±–æ—Ä —É—Å–ª—É–≥ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏",
    "optionalInfo": "–í—ã–±–æ—Ä —É—Å–ª—É–≥ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ –æ–±—Å—É–¥–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É—Å–ª—É–≥–∏ —Å –º–∞—Å—Ç–µ—Ä–æ–º –Ω–∞ –º–µ—Å—Ç–µ.",
    "forSelectedCategory": "–¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
    "loadingError": "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—Å–ª—É–≥",
    "noServicesAvailable": "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
    "serviceNumber": "–£—Å–ª—É–≥–∞ #{{id}}",
    "total": "–ò—Ç–æ–≥–æ",
    "clearAll": "–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ",
    "commentLabel": "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–ø–∏—Å–∏",
    "commentPlaceholder": "–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–ø–∏—Å–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)",
    "allFieldsCompleted": "–í—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã. –ú–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.",
    "price": "–¶–µ–Ω–∞",
    "priceOnRequest": "–ø–æ –∑–∞–ø—Ä–æ—Å—É",
    "selectServicePointFirst": "–°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Å–µ—Ä–≤–∏—Å–Ω—É—é —Ç–æ—á–∫—É –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ"
  },
  uk: {
    "servicesAndComments": "–í–∏–±—ñ—Ä –ø–æ—Å–ª—É–≥ —Ç–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ",
    "optionalInfo": "–í–∏–±—ñ—Ä –ø–æ—Å–ª—É–≥ –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π. –í–∏ –º–æ–∂–µ—Ç–µ –æ–±–≥–æ–≤–æ—Ä–∏—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–æ—Å–ª—É–≥–∏ –∑ –º–∞–π—Å—Ç—Ä–æ–º –Ω–∞ –º—ñ—Å—Ü—ñ.",
    "forSelectedCategory": "–¥–ª—è –≤–∏–±—Ä–∞–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó",
    "loadingError": "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—Å–ª—É–≥",
    "noServicesAvailable": "–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø–æ—Å–ª—É–≥ –¥–ª—è –≤–∏–±—Ä–∞–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó",
    "serviceNumber": "–ü–æ—Å–ª—É–≥–∞ #{{id}}",
    "total": "–†–∞–∑–æ–º",
    "clearAll": "–û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å–µ",
    "commentLabel": "–ö–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –∑–∞–ø–∏—Å—É",
    "commentPlaceholder": "–î–æ–¥–∞–π—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –∑–∞–ø–∏—Å—É (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)",
    "allFieldsCompleted": "–í—Å—ñ –ø–æ–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ. –ú–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É.",
    "price": "–¶—ñ–Ω–∞",
    "priceOnRequest": "–∑–∞ –∑–∞–ø–∏—Ç–æ–º",
    "selectServicePointFirst": "–°–ø–æ—á–∞—Ç–∫—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∏–±—Ä–∞—Ç–∏ —Å–µ—Ä–≤—ñ—Å–Ω—É —Ç–æ—á–∫—É –Ω–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–º—É –∫—Ä–æ—Ü—ñ"
  }
};

function addMissingServicesTranslations(filePath, lang) {
  console.log(`\nüîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–ª—è ServicesStep –≤ ${lang.toUpperCase()} —Ñ–∞–π–ª–µ...`);
  
  try {
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    const content = fs.readFileSync(filePath, 'utf8');
    const data = JSON.parse(content);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ–∫—Ü–∏–∏ bookingSteps.services
    if (!data.bookingSteps || !data.bookingSteps.services) {
      console.log(`‚ùå –°–µ–∫—Ü–∏—è bookingSteps.services –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ ${lang} —Ñ–∞–π–ª–µ`);
      return data;
    }
    
    let addedCount = 0;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã
    for (const [key, value] of Object.entries(missingTranslations[lang])) {
      if (!data.bookingSteps.services[key]) {
        data.bookingSteps.services[key] = value;
        addedCount++;
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω ${key}: "${value}"`);
      } else {
        console.log(`‚è≠Ô∏è  ${key}: —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
      }
    }
    
    console.log(`üìä –î–æ–±–∞–≤–ª–µ–Ω–æ ${addedCount} –Ω–æ–≤—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ ${lang} —Ñ–∞–π–ª–µ`);
    
    return data;
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${lang} —Ñ–∞–π–ª–∞:`, error.message);
    throw error;
  }
}

function main() {
  console.log('üéØ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–ï–†–ï–í–û–î–û–í –î–õ–Ø SERVICESSTEP');
  console.log('==========================================');
  
  try {
    // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
    fs.writeFileSync(
      ruFilePath.replace('.json', `_backup_services_${timestamp}.json`),
      fs.readFileSync(ruFilePath, 'utf8')
    );
    fs.writeFileSync(
      ukFilePath.replace('.json', `_backup_services_${timestamp}.json`),
      fs.readFileSync(ukFilePath, 'utf8')
    );
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –≤ —Ä—É—Å—Å–∫–∏–π —Ñ–∞–π–ª
    const ruData = addMissingServicesTranslations(ruFilePath, 'ru');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –≤ —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π —Ñ–∞–π–ª  
    const ukData = addMissingServicesTranslations(ukFilePath, 'uk');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    fs.writeFileSync(ruFilePath, JSON.stringify(ruData, null, 2), 'utf8');
    fs.writeFileSync(ukFilePath, JSON.stringify(ukData, null, 2), 'utf8');
    
    console.log('\nüéâ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û!');
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è ServicesStep');
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–æ–≤');
    console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log(`- –†—É—Å—Å–∫–∏–π —Ñ–∞–π–ª: ${Object.keys(missingTranslations.ru).length} –∫–ª—é—á–µ–π –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ`);
    console.log(`- –£–∫—Ä–∞–∏–Ω—Å–∫–∏–π —Ñ–∞–π–ª: ${Object.keys(missingTranslations.uk).length} –∫–ª—é—á–µ–π –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ`);
    
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê:', error.message);
    process.exit(1);
  }
}

if (require.main === module) {
  main();
}

module.exports = { addMissingServicesTranslations, missingTranslations }; 