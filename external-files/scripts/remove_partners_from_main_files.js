const fs = require('fs');
const path = require('path');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–µ–∫—Ü–∏–π partners –∏ partner –∏–∑ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
function removePartnersSection(filePath) {
  try {
    const content = fs.readFileSync(filePath, 'utf8');
    const data = JSON.parse(content);
    
    // –£–¥–∞–ª—è–µ–º —Å–µ–∫—Ü–∏–∏ admin.partners –∏ admin.partner
    if (data.admin && data.admin.partners) {
      console.log(`–£–¥–∞–ª—è–µ–º admin.partners –∏–∑ ${filePath}`);
      delete data.admin.partners;
    }
    
    if (data.admin && data.admin.partner) {
      console.log(`–£–¥–∞–ª—è–µ–º admin.partner –∏–∑ ${filePath}`);
      delete data.admin.partner;
    }
    
    if (data.admin && data.admin.partnerServicePoints) {
      console.log(`–£–¥–∞–ª—è–µ–º admin.partnerServicePoints –∏–∑ ${filePath}`);
      delete data.admin.partnerServicePoints;
    }
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    fs.writeFileSync(filePath, JSON.stringify(data, null, 2), 'utf8');
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª: ${filePath}`);
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${filePath}:`, error.message);
  }
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
const ruPath = '../../src/i18n/locales/ru.json';
const ukPath = '../../src/i18n/locales/uk.json';

console.log('üîÑ –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–π partners –∏–∑ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');
removePartnersSection(ruPath);
removePartnersSection(ukPath);

console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è Partners —Ä–∞–∑–¥–µ–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('üìã –ü–µ—Ä–µ–≤–æ–¥—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ forms/partners/partners-ru.json –∏ partners-uk.json');
