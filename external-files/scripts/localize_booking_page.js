const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
const bookingPagePath = path.join(__dirname, '../../src/pages/bookings/NewBookingWithAvailabilityPage.tsx');

function localizeBookingPage() {
  try {
    console.log('üåç –õ–æ–∫–∞–ª–∏–∑—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...\n');
    
    let content = fs.readFileSync(bookingPagePath, 'utf8');
    let replacements = 0;
    
    // 1. –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç useTranslation (–µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç)
    if (!content.includes('useTranslation')) {
      content = content.replace(
        "import React, { useState, useEffect, useMemo } from 'react';",
        "import React, { useState, useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';"
      );
      console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç useTranslation');
      replacements++;
    }
    
    // 2. –î–æ–±–∞–≤–ª—è–µ–º —Ö—É–∫ useTranslation –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (–ø–æ—Å–ª–µ –¥—Ä—É–≥–∏—Ö —Ö—É–∫–æ–≤)
    if (!content.includes('const { t } = useTranslation();')) {
      content = content.replace(
        'const NewBookingWithAvailabilityPage: React.FC = () => {',
        'const NewBookingWithAvailabilityPage: React.FC = () => {\n  const { t } = useTranslation();'
      );
      console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ö—É–∫ useTranslation');
      replacements++;
    }
    
    // 3. –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —à–∞–≥–æ–≤
    const stepsPattern = /const STEPS = \[\s*{[\s\S]*?}\s*\];/;
    const newSteps = `const STEPS = [
  {
    id: 'category-selection',
    label: t('booking.steps.categorySelection'),
    component: CategorySelectionStep,
  },
  {
    id: 'city-service-point',
    label: t('booking.steps.cityServicePoint'),
    component: CityServicePointStep,
  },
  {
    id: 'date-time',
    label: t('booking.steps.dateTime'),
    component: DateTimeStep,
  },
  {
    id: 'client-info',
    label: t('booking.steps.clientInfo'),
    component: ClientInfoStep,
  },
  {
    id: 'car-type',
    label: t('booking.steps.carType'),
    component: CarTypeStep,
  },
  {
    id: 'services',
    label: t('booking.steps.services'),
    component: ServicesStep,
  },
  {
    id: 'review',
    label: t('booking.steps.review'),
    component: ReviewStep,
  },
];`;
    
    if (stepsPattern.test(content)) {
      content = content.replace(stepsPattern, newSteps);
      console.log('‚úÖ –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —à–∞–≥–æ–≤');
      replacements++;
    }
    
    // 4. –õ–æ–∫–∞–ª–∏–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã
    const textReplacements = [
      // –ó–∞–≥–æ–ª–æ–≤–∫–∏
      { from: /–ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ(?!\s*\()/g, to: "{t('booking.title')}" },
      { from: /\(–≥–æ—Å—Ç–µ–≤–æ–µ\)/g, to: "{t('booking.guestTitle').replace(t('booking.title'), '').trim()}" },
      { from: /–û—Ç–º–µ–Ω–∞/g, to: "{t('booking.cancel')}" },
      
      // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
      { from: /–ù–∞–∑–∞–¥/g, to: "{t('booking.back')}" },
      { from: /–î–∞–ª–µ–µ/g, to: "{t('booking.next')}" },
      { from: /–°–æ–∑–¥–∞–Ω–∏–µ\.\.\./g, to: "{t('booking.creating')}" },
      { from: /–°–æ–∑–¥–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ/g, to: "{t('booking.createBooking')}" },
      
      // –î–∏–∞–ª–æ–≥ —É—Å–ø–µ—Ö–∞
      { from: /"–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!"/g, to: "t('booking.success.title')" },
      { from: /"–í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ\. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–≥–æ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é\."/g, to: "t('booking.success.messageAuth')" },
      { from: /"–í–∞—à–µ –≥–æ—Å—Ç–µ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ! –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\."/g, to: "t('booking.success.messageGuest')" },
      { from: /'–ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è'/g, to: "t('booking.success.myBookings')" },
      { from: /'–ù–∞ –≥–ª–∞–≤–Ω—É—é'/g, to: "t('booking.success.goHome')" },
      { from: /'–í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é'/g, to: "t('booking.success.returnHome')" },
    ];
    
    textReplacements.forEach(({ from, to }) => {
      const matches = content.match(from);
      if (matches) {
        content = content.replace(from, to);
        console.log(`‚úÖ –ó–∞–º–µ–Ω–µ–Ω–æ: ${matches.length} –≤—Ö–æ–∂–¥–µ–Ω–∏–π "${from.source || from}"`);
        replacements += matches.length;
      }
    });
    
    // 5. –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–º–µ–Ω—ã –¥–ª—è JSX
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —É—Å–ª–æ–≤–∏–µ–º
    content = content.replace(
      /–ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ \{!isAuthenticated && <Typography component="span" variant="body2" color="text\.secondary">\(–≥–æ—Å—Ç–µ–≤–æ–µ\)<\/Typography>\}/g,
      '{isAuthenticated ? t(\'booking.title\') : t(\'booking.guestTitle\')}'
    );
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (replacements > 0) {
      fs.writeFileSync(bookingPagePath, content, 'utf8');
      console.log(`\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:`);
      console.log(`üìù –§–∞–π–ª: NewBookingWithAvailabilityPage.tsx`);
      console.log(`üîÑ –í—Å–µ–≥–æ –∑–∞–º–µ–Ω: ${replacements}`);
      console.log(`‚úÖ –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
    } else {
      console.log('‚ÑπÔ∏è  –ó–∞–º–µ–Ω—ã –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è - —Ñ–∞–π–ª —É–∂–µ –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
localizeBookingPage(); 