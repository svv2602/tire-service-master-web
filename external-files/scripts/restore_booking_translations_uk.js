const fs = require('fs');
const path = require('path');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —É–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
function restoreBookingTranslations() {
  console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã /client/booking...');

  // –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
  const backupFilePath = path.join(__dirname, '../../src/i18n/locales/uk.json.backup');
  const currentFilePath = path.join(__dirname, '../../src/i18n/locales/uk.json');

  try {
    // –ß–∏—Ç–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    console.log('üìñ –ß–∏—Ç–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é uk.json.backup...');
    const backupData = JSON.parse(fs.readFileSync(backupFilePath, 'utf8'));
    
    // –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
    console.log('üìñ –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª uk.json...');
    const currentData = JSON.parse(fs.readFileSync(currentFilePath, 'utf8'));

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
    const bookingTranslations = {
      booking: backupData.booking,
      bookingSteps: backupData.bookingSteps,
    };

    console.log('üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:');
    console.log('- booking:', Object.keys(bookingTranslations.booking || {}).length, '–∫–ª—é—á–µ–π');
    console.log('- bookingSteps:', Object.keys(bookingTranslations.bookingSteps || {}).length, '–∫–ª—é—á–µ–π');

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å —Ç–µ–∫—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const updatedData = {
      ...currentData,
      ...bookingTranslations
    };

    // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
    const backupCurrentPath = path.join(__dirname, `../../src/i18n/locales/uk.json.backup.${timestamp}`);
    
    console.log('üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞...');
    fs.writeFileSync(backupCurrentPath, JSON.stringify(currentData, null, 2), 'utf8');

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('‚úçÔ∏è –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã...');
    fs.writeFileSync(currentFilePath, JSON.stringify(updatedData, null, 2), 'utf8');

    console.log('‚úÖ –£–∫—Ä–∞–∏–Ω—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã /client/booking —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!');
    console.log('üìÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤:', backupCurrentPath);
    
    // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = {
      'booking.title': updatedData.booking?.title || '–ù–ï –ù–ê–ô–î–ï–ù–û',
      'booking.steps.categorySelection': updatedData.booking?.steps?.categorySelection || '–ù–ï –ù–ê–ô–î–ï–ù–û',
      'bookingSteps.clientInfo.title': updatedData.bookingSteps?.clientInfo?.title || '–ù–ï –ù–ê–ô–î–ï–ù–û',
      'bookingSteps.dateTime.title': updatedData.bookingSteps?.dateTime?.title || '–ù–ï –ù–ê–ô–î–ï–ù–û',
      'bookingSteps.review.title': updatedData.bookingSteps?.review?.title || '–ù–ï –ù–ê–ô–î–ï–ù–û'
    };

    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤:');
    Object.entries(stats).forEach(([key, value]) => {
      console.log(`  ${key}: "${value}"`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
restoreBookingTranslations(); 