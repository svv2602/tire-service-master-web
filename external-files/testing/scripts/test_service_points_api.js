const axios = require('axios');

const API_BASE = 'http://localhost:8000';

async function testServicePointsAPI() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö —Ç–æ—á–µ–∫...\n');

    try {
        // 1. –¢–µ—Å—Ç –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        console.log('1. –ó–∞–ø—Ä–æ—Å –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:');
        const response1 = await axios.get(`${API_BASE}/api/v1/service_points`);
        console.log(`   –°—Ç–∞—Ç—É—Å: ${response1.status}`);
        console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫: ${response1.data.data?.length || 0}`);
        console.log(`   –ü–∞–≥–∏–Ω–∞—Ü–∏—è: ${JSON.stringify(response1.data.pagination)}\n`);

        // 2. –¢–µ—Å—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        console.log('2. –ó–∞–ø—Ä–æ—Å —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π (page=1, per_page=2):');
        const response2 = await axios.get(`${API_BASE}/api/v1/service_points`, {
            params: { page: 1, per_page: 2 }
        });
        console.log(`   –°—Ç–∞—Ç—É—Å: ${response2.status}`);
        console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫: ${response2.data.data?.length || 0}`);
        console.log(`   –ü–∞–≥–∏–Ω–∞—Ü–∏—è: ${JSON.stringify(response2.data.pagination)}\n`);

        // 3. –¢–µ—Å—Ç —Å –ø–æ–∏—Å–∫–æ–º
        console.log('3. –ó–∞–ø—Ä–æ—Å —Å –ø–æ–∏—Å–∫–æ–º (search="–ö–∏–µ–≤"):');
        const response3 = await axios.get(`${API_BASE}/api/v1/service_points`, {
            params: { search: '–ö–∏–µ–≤' }
        });
        console.log(`   –°—Ç–∞—Ç—É—Å: ${response3.status}`);
        console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫: ${response3.data.data?.length || 0}`);
        console.log(`   –ü–µ—Ä–≤–∞—è —Ç–æ—á–∫–∞: ${response3.data.data?.[0]?.name || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}\n`);

        // 4. –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        console.log('4. –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:');
        const loginResponse = await axios.post(`${API_BASE}/api/v1/auth/login`, {
            auth: {
                login: 'test@test.com',
                password: 'password'
            }
        });
        
        if (loginResponse.status === 200) {
            console.log('   ‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
            const token = loginResponse.data.auth_token;
            
            // 5. –¢–µ—Å—Ç —Å —Ç–æ–∫–µ–Ω–æ–º
            console.log('5. –ó–∞–ø—Ä–æ—Å —Å —Ç–æ–∫–µ–Ω–æ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:');
            const response5 = await axios.get(`${API_BASE}/api/v1/service_points`, {
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });
            console.log(`   –°—Ç–∞—Ç—É—Å: ${response5.status}`);
            console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫: ${response5.data.data?.length || 0}\n`);
        }

        console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã API –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error.response?.data || error.message);
    }
}

testServicePointsAPI(); 