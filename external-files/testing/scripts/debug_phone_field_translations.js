// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –ø–æ–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
// –ó–∞–ø—É—Å–∫–∞—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ http://localhost:3008/client/booking

console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –ø–æ–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ i18next
if (typeof window.i18n !== 'undefined') {
    console.log('‚úÖ i18next –¥–æ—Å—Ç—É–ø–µ–Ω –≤ window.i18n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫
    const currentLang = window.i18n.language;
    console.log(`üìù –¢–µ–∫—É—â–∏–π —è–∑—ã–∫: ${currentLang}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏
    const languages = window.i18n.languages;
    console.log(`üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏:`, languages);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã phoneField –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞
    const phoneFieldTranslations = window.i18n.getResourceBundle(currentLang, 'translation')?.phoneField;
    if (phoneFieldTranslations) {
        console.log('‚úÖ –ü–µ—Ä–µ–≤–æ–¥—ã phoneField –Ω–∞–π–¥–µ–Ω—ã:');
        console.log(phoneFieldTranslations);
    } else {
        console.log('‚ùå –ü–µ—Ä–µ–≤–æ–¥—ã phoneField –ù–ï –Ω–∞–π–¥–µ–Ω—ã');
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏
    const testKeys = [
        'phoneField.label',
        'phoneField.placeholder', 
        'phoneField.helperText'
    ];
    
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –∫–ª—é—á–µ–π:');
    testKeys.forEach(key => {
        const translation = window.i18n.t(key);
        const isTranslated = translation !== key;
        console.log(`${isTranslated ? '‚úÖ' : '‚ùå'} ${key}: "${translation}"`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –æ–±–æ–∏—Ö —è–∑—ã–∫–æ–≤
    console.log('\nüîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –≤—Å–µ—Ö —è–∑—ã–∫–æ–≤:');
    ['ru', 'uk'].forEach(lang => {
        console.log(`\n--- –Ø–∑—ã–∫: ${lang} ---`);
        testKeys.forEach(key => {
            const translation = window.i18n.t(key, { lng: lang });
            const isTranslated = translation !== key;
            console.log(`${isTranslated ? '‚úÖ' : '‚ùå'} ${key}: "${translation}"`);
        });
    });
    
} else {
    console.log('‚ùå i18next –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω –≤ window.i18n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç—É–ø–∞
    if (typeof window.i18next !== 'undefined') {
        console.log('‚úÖ i18next –¥–æ—Å—Ç—É–ø–µ–Ω –≤ window.i18next');
    } else {
        console.log('‚ùå i18next –≤–æ–æ–±—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
const savedLang = localStorage.getItem('i18nextLng');
console.log(`üíæ –°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —è–∑—ã–∫ –≤ localStorage: ${savedLang}`);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
const phoneInputs = document.querySelectorAll('input[type="tel"]');
console.log(`üì± –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ–π —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${phoneInputs.length}`);

phoneInputs.forEach((input, index) => {
    console.log(`üì± –ü–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ${index + 1}:`);
    console.log(`  placeholder: "${input.placeholder}"`);
    console.log(`  value: "${input.value}"`);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
window.testLanguageSwitch = function(lang) {
    console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —è–∑—ã–∫ –Ω–∞: ${lang}`);
    if (window.i18n) {
        window.i18n.changeLanguage(lang).then(() => {
            console.log(`‚úÖ –Ø–∑—ã–∫ –ø–µ—Ä–µ–∫–ª—é—á—ë–Ω –Ω–∞: ${window.i18n.language}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã
            const testKeys = ['phoneField.label', 'phoneField.placeholder', 'phoneField.helperText'];
            testKeys.forEach(key => {
                const translation = window.i18n.t(key);
                const isTranslated = translation !== key;
                console.log(`${isTranslated ? '‚úÖ' : '‚ùå'} ${key}: "${translation}"`);
            });
        });
    }
};

console.log('\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ testLanguageSwitch("ru") –∏–ª–∏ testLanguageSwitch("uk") –¥–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞');
console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞'); 