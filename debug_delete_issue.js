// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —É–¥–∞–ª–µ–Ω–∏–µ–º —É—Å–ª—É–≥
// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ http://localhost:3008/services/3/edit

console.log('=== –ù–ê–ß–ê–õ–û –û–¢–õ–ê–î–ö–ò –£–î–ê–õ–ï–ù–ò–Ø –£–°–õ–£–ì ===');

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage
const token = localStorage.getItem('tvoya_shina_token') || 
             localStorage.getItem('tvoya_shina_auth_token') || 
             localStorage.getItem('token') || 
             localStorage.getItem('auth_token');

console.log('üîë –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', token ? '–Ω–∞–π–¥–µ–Ω' : '–ù–ï –ù–ê–ô–î–ï–ù');

if (!token) {
  console.error('‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.');
} else {
  console.log('‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...');
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É—Å–ª—É–≥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 3
  fetch('http://localhost:8000/api/v1/service_categories/3/services', {
    headers: {
      'Authorization': `Bearer ${token}`,
      'Accept': 'application/json',
      'Content-Type': 'application/json'
    }
  })
  .then(response => response.json())
  .then(services => {
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ —É—Å–ª—É–≥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 3: ${services.length}`);
    
    if (services.length > 0) {
      const testService = services[0];
      console.log(`üéØ –¢–µ—Å—Ç–æ–≤–∞—è —É—Å–ª—É–≥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:`, {
        id: testService.id,
        name: testService.name,
        idType: typeof testService.id
      });
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º URL –∫–∞–∫ –≤ RTK Query
      const categoryId = '3';
      const serviceId = String(testService.id);
      const deleteUrl = `http://localhost:8000/api/v1/service_categories/${categoryId}/services/${serviceId}`;
      
      console.log(`üîó URL –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ${deleteUrl}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
      if (deleteUrl.includes('[object') || deleteUrl.includes('undefined')) {
        console.error('‚ùå –ü–†–û–ë–õ–ï–ú–ê: URL —Å–æ–¥–µ—Ä–∂–∏—Ç [object Object] –∏–ª–∏ undefined!');
      } else {
        console.log('‚úÖ URL –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ - —ç—Ç–æ —Ä–µ–∞–ª—å–Ω–æ —É–¥–∞–ª–∏—Ç —É—Å–ª—É–≥—É!)
        const shouldDelete = confirm(`–£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É "${testService.name}" –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è?`);
        
        if (shouldDelete) {
          console.log('üóëÔ∏è –í—ã–ø–æ–ª–Ω—è–µ–º DELETE –∑–∞–ø—Ä–æ—Å...');
          
          fetch(deleteUrl, {
            method: 'DELETE',
            headers: {
              'Authorization': `Bearer ${token}`,
              'Accept': 'application/json'
            }
          })
          .then(response => {
            console.log(`üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${response.status} ${response.statusText}`);
            
            if (response.ok) {
              console.log('‚úÖ –£—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!');
            } else {
              console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—Å–ª—É–≥–∏');
              return response.text().then(text => {
                console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', text);
              });
            }
          })
          .catch(error => {
            console.error('‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞:', error);
          });
        } else {
          console.log('‚è≠Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
        }
      }
    } else {
      console.log('üì≠ –í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 3 –Ω–µ—Ç —É—Å–ª—É–≥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }
  })
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —É—Å–ª—É–≥:', error);
  });
}

console.log('=== –ö–û–ù–ï–¶ –°–ö–†–ò–ü–¢–ê –û–¢–õ–ê–î–ö–ò ===');
