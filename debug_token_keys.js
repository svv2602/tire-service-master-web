console.log('=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–õ–Æ–ß–ï–ô –¢–û–ö–ï–ù–û–í ===');

// –ù–∞–π—Ç–∏ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–ª—é—á–∏ —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ
const possibleTokenKeys = [
  'tvoya_shina_token',
  'tvoya_shina_auth_token',
  'tvoya_shina_access_token',
  'auth_token',
  'access_token', 
  'token',
  'bearer_token'
];

console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–ª—é—á–µ–π —Ç–æ–∫–µ–Ω–æ–≤:');
possibleTokenKeys.forEach(key => {
  const value = localStorage.getItem(key);
  console.log(`  ${key}: ${value ? '–ï–°–¢–¨ (' + value.substring(0, 30) + '...)' : '–ù–ï–¢'}`);
});

// –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
console.log('\nüîë –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω...');
fetch('http://localhost:8000/api/v1/auth/login', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({
    email: 'admin@test.com',
    password: 'admin123'
  })
})
.then(response => response.json())
.then(data => {
  if (data.tokens?.access) {
    const token = data.tokens.access;
    console.log('\n‚úÖ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω:', token.substring(0, 30) + '...');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –≤–æ –í–°–ï –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–ª—é—á–∏
    console.log('\nüíæ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –≤–æ –≤—Å–µ –∫–ª—é—á–∏:');
    possibleTokenKeys.forEach(key => {
      localStorage.setItem(key, token);
      console.log(`  ‚úì ${key}: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`);
    });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    localStorage.setItem('tvoya_shina_user', JSON.stringify(data.user));
    console.log('  ‚úì tvoya_shina_user: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    
    console.log('\nüéØ –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä–∏–º, –∫–∞–∫–æ–π –∫–ª—é—á –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥...');
    console.log('–û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–¥–º–∏–Ω-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ Network tab –≤ DevTools');
    
  } else {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', data);
  }
})
.catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
});
