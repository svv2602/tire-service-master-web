const axios = require('axios');

const API_BASE_URL = 'http://localhost:8000';

// –¢–æ–∫–µ–Ω –∏–∑ –ª–æ–≥–æ–≤ (–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
const AUTH_TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJleHAiOjE3NDgyNDA4MDksInRva2VuX3R5cGUiOiJhY2Nlc3MifQ.F36-I9JcFfY2ufwV031i1napgZCvpYcmOgfgsw2QRg0';

async function testBookingsWithAuth() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint...');
    const healthResponse = await axios.get(`${API_BASE_URL}/api/v1/health`);
    console.log('‚úÖ Health check:', healthResponse.data);
    console.log('');

    // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
    console.log('2. –ü–æ–ª—É—á–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π...');
    try {
      const bookingsResponse = await axios.get(`${API_BASE_URL}/api/v1/bookings?page=1&per_page=10`, {
        headers: {
          'Authorization': `Bearer ${AUTH_TOKEN}`
        }
      });
      console.log('‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
      console.log('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', Object.keys(bookingsResponse.data));
      
      if (bookingsResponse.data.data) {
        console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:', bookingsResponse.data.data.length);
        console.log('–ü–∞–≥–∏–Ω–∞—Ü–∏—è:', bookingsResponse.data.pagination);
      }
      
      if (bookingsResponse.data.data && bookingsResponse.data.data.length > 0) {
        console.log('–ü—Ä–∏–º–µ—Ä –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', bookingsResponse.data.data[0]);
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞:', error.response?.status, error.response?.data);
    }
    console.log('');

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏...');
    try {
      const filteredResponse = await axios.get(`${API_BASE_URL}/api/v1/bookings?page=1&per_page=5&today=true`, {
        headers: {
          'Authorization': `Bearer ${AUTH_TOKEN}`
        }
      });
      console.log('‚úÖ –§–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã:', filteredResponse.data.pagination);
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:', error.response?.status, error.response?.data);
    }
    console.log('');

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞)
    console.log('4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞)...');
    try {
      const unauthorizedResponse = await axios.get(`${API_BASE_URL}/api/v1/bookings`);
      console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', unauthorizedResponse.data);
    } catch (error) {
      console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω –∑–∞–ø—Ä–æ—Å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error.response?.status, error.response?.data?.error);
    }

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testBookingsWithAuth(); 