const axios = require('axios');

const API_BASE_URL = 'http://localhost:8000';

async function testBookingsAPI() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint...');
    const healthResponse = await axios.get(`${API_BASE_URL}/api/v1/health`);
    console.log('‚úÖ Health check:', healthResponse.data);
    console.log('');

    // 2. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    console.log('2. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
    try {
      const bookingsResponse = await axios.get(`${API_BASE_URL}/api/v1/bookings`);
      console.log('‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã:', bookingsResponse.data);
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ (–æ–∂–∏–¥–∞–µ–º–æ):', error.response?.status, error.response?.data);
    }
    console.log('');

    // 3. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ç–µ—Å—Ç–æ–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
    console.log('3. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ç–µ—Å—Ç–æ–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º...');
    try {
      const testResponse = await axios.get(`${API_BASE_URL}/api/v1/bookings?test=true`);
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã:', testResponse.data);
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞:', error.response?.status, error.response?.data);
    }
    console.log('');

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å SWAGGER_DRY_RUN
    console.log('4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å SWAGGER_DRY_RUN...');
    try {
      const swaggerResponse = await axios.get(`${API_BASE_URL}/api/v1/bookings`, {
        headers: {
          'X-Swagger-Dry-Run': 'true'
        }
      });
      console.log('‚úÖ Swagger dry run:', swaggerResponse.data);
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞:', error.response?.status, error.response?.data);
    }
    console.log('');

    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤
    console.log('5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤...');
    try {
      const routesResponse = await axios.get(`${API_BASE_URL}/api/v1/partners`);
      console.log('‚úÖ –ü–∞—Ä—Ç–Ω–µ—Ä—ã –¥–æ—Å—Ç—É–ø–Ω—ã');
    } catch (error) {
      console.log('‚ùå –ü–∞—Ä—Ç–Ω–µ—Ä—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã:', error.response?.status);
    }

    try {
      const regionsResponse = await axios.get(`${API_BASE_URL}/api/v1/regions`);
      console.log('‚úÖ –†–µ–≥–∏–æ–Ω—ã –¥–æ—Å—Ç—É–ø–Ω—ã:', regionsResponse.data.length, '—Ä–µ–≥–∏–æ–Ω–æ–≤');
    } catch (error) {
      console.log('‚ùå –†–µ–≥–∏–æ–Ω—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã:', error.response?.status);
    }

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testBookingsAPI(); 